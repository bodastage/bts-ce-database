"""Create Nokia CM RAML20 import tables

Revision ID: 63f20accf576
Revises: 5113d319b861
Create Date: 2018-02-11 00:08:58.552000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '63f20accf576'
down_revision = '5113d319b861'
branch_labels = None
depends_on = None


def upgrade():
    op.create_table('A2NE',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('A2ST',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2EndAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('stcAlarmEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('A2UT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('queue2Weight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('queue3Weight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('queue4Weight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ACCP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egressBandwidth', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ingressBandwidth', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumVCIBitsSupported', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumVPIBitsSupported', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('upcNpc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ADCE',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('frequencyBandInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsMsTxPwrMaxCCH1x00', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msTxPwrMaxGSM1x00', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('targetCellDN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adjCellBsicBcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adjCellBsicNcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adjacentCellIdCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adjacentCellIdLac', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adjacentCellIdMCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adjacentCellIdMNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adjcIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrDadlbTargetCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bcchFrequency', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('chainedAdjacentCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dadlbTargetCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableDerivedHandoverPower', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableHoMarginLevQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsMsTxpwrMaxCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsPenaltyTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsRxlevAccessMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsTemporaryOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hcsPriorityClass', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hcsThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoLevelUmbrella', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoLoadFactor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoMarginDelayTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoMarginLev', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoMarginPbgt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoMarginQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoPriorityLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoTargetArea', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msTxPwrMaxGSM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('neighbourCellRanking', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rac', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxLevMinCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('synchronized', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trhoTargetLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ADJG',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgMCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgMNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TargetCellDN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ADJGChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ADJGType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgBCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgBCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgBandIndicator', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgLAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgNCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgSIB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgTxPwrMaxRACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgTxPwrMaxTCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NrtHopgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtHopgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ADJI',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiMCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiMNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TargetCellDN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ADJIChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiCPICHTxPwr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiComLoadMeasDRNCCellNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiEcNoOffsetNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiHandlingBlockedCellSLHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiLAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiNCHOHSPASupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiRAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiRNCid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiSIB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiScrCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiTxDiv', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiTxPwrDPCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiTxPwrRACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiUARFCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('BlindHOTargetCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NrtHopiIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtHopiIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ADJL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('barredLteAdjCellGroup', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('barredLteAdjCellList', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('barredLteAdjCellPattern', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('barredLteAdjCellPatternSense', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('earfcn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lteAdjCellMcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lteAdjCellMinBand', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lteAdjCellMinRxLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lteAdjCellMnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lteAdjCellPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lteAdjCellReselectLowerThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lteAdjCellReselectUpperThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lteAdjCellTac', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ADJLChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjLEARFCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjLMeasBw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjLSelectFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HopLIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ADJS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsMCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsMNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TargetCellDN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ADJSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsCPICHTxPwr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsDERR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsEcNoOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsLAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsRAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsRNCid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsSIB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsScrCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsTxDiv', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsTxPwrRACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NrtHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTWithHSDPAHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SRBHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ADJW',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('targetCellDN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjwCId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('intSystemDaEcioThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lac', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minEcnoThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rncId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sac', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('scramblingCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('txDiversityInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uarfcn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ADR4GW',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bfdId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('preference', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('routeType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('AMGR',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ldapConnectionType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('primaryLdapPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('primaryLdapServer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ANBA',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nbapType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ANRPRL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actAlsoForUeBasedANR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('anrThresRSRPNbCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('anrThresRSRPNbCellMobEv', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('anrThresRSRQNbCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nrLimitInterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nrLimitIntraFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('targetCarrierFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ANTL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('alDcVoltageEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('antId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('antennaRoundTripDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('antennaTotalLoss', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cableLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('communication3gppEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('feederLoss', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('feederVoltage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('multiplexerAmount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('multiplexerLoss', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('multiplexerTotalDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('multiplexerType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rModId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('velocityFactor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vswrMajorAlarm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vswrMinorAlarm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('additionalRxGain', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('forcedVoltage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('BCF',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('latitude', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('longitude', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adminState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('autoUnlAllowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('batteryBackupProcedure', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bcchTrxBatbuTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bcfOutputInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bcfType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('clockSource', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('externalAlarmDefinition_inputId_inputTextId_polarity_reportingRoute_severity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lapdLinkName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lapdLinkNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('masterClockBcf', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('normTrxBatbuTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxDifferenceLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('syncMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('synchEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('synchStatus', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('outputDefinition_textId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('notificationOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('BFD',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bfdActivation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bfdAdminUp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bfdDestAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bfdDetectMult', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bfdSourceIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bfdSourceUdpPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bfdType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('desMinTxInt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('function', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('reqMinRxInt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bfdGrp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('BFDGRP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('BSC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bscOptions', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dcsMacrocellThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dcsMicrocellThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('neSwRelease', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adjCellFreqsInMeasBAInfo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('alrmChFail', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('alrmNoOfSei', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('alrmSchFail', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('alrmSdcch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('alrmSeizReq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('alrmTch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amhLowerLoadThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amhMaxLoadOfTgtCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amhTrhoGuardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amhUpperLoadThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfInHandovers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrSetGradesEnabl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ansiEnvironment', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('batteryBackupTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bcsuLoadThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bscType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsLoadDepTchRateLower', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsLoadDepTchRateUpper', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('callReleaseLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('delayHoPcEmergencyCalls', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dfcaAmrFrConnection_softBlockingCn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dfcaAmrHrConnection_softBlockingCn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dfcaFrConnection_softBlockingCn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('disableExtDr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('disableIntHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dtmFragmentationPenalty', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('emerCallOnFacch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('extraTrxBcsuNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('extraTrxMaxTrxInBcsu', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('fepInPcHoUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('frTchALim', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('freeTSLsCsDowngrade', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('freeTSLsCsUpgrade', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('freqInMeasBAInfo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsTerritoryCalc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gsmMacrocellThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gsmMicrocellThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoPrefOrderInterfDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoPrefOrderInterfUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hrTchALim', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('inactCriteria', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('inactEventsPerHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('incomeRateThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('initAmrChannelRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('internalHoToExternal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('intraSegSdcchHoGuard', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ishoPreferredForNonDtmMs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lapdLoadThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('loadRateChSearch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxBcfCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxBtsCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxHldSdcch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxHldTch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxOnHiIf', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxTchTransactionRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxTrxCapacityHw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxTrxCapacityReal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('meanBepLimitUL_Prof0_2tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('meanBepLimitUL_Prof0_3tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('meanBepLimitUL_Prof0_4tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('meanBepLimitUL_Prof1_2tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('meanBepLimitUL_Prof1_3tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('meanBepLimitUL_Prof1_4tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('meanBepLimitUL_Prof2_3tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('meanBepLimitUL_Prof2_4tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('measPrdCh', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('measPrdFail', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('measPrdSdcch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('measTchMhold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minHiIf', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minHldTch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msDistanceBehaviour', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msSpeedC11', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msSpeedC12', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('noOfPrefCells', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nokBtsOffHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nokBtsOffMinute', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nokBtsOnHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nokBtsOnMinute', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ordinaryCallOnFacch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pagingAnsOnFacch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuMaxNoDLtbfInCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuMaxNoULtbfInCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pfcAckBlerLimit_legacyStream', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pfcAckBlerLimit_limit10004000ms', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pfcAckBlerLimit_limit10150ms', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pfcAckBlerLimit_limit200950ms', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pfcAckBlerLimit_notAvailable', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pfcUnackBlerLimit_legacyStream', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pfcUnackBlerLimit_limit110e1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pfcUnackBlerLimit_limit110e2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pfcUnackBlerLimit_limit110e3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pfcUnackBlerLimit_limit710e3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pfcUnackBlerLimit_notAvailable', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prdHighIf', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prdNokBts', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qcActionTriggerThr_drop', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qcActionTriggerThr_nccr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qcActionTriggerThr_qosRenego', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qcActionTriggerThr_realloca', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('reestablishOnFacch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rnwConfId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rnwFallbackConfId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rnwPlanConfId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rnwPlanDatabaseState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rtsl0PrefInTCHAlloc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxAntSupPer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxLevBalance', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxLevelBasedTchAccess', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxqualLimitUL_Prof0_2tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxqualLimitUL_Prof0_3tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxqualLimitUL_Prof0_4tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxqualLimitUL_Prof1_2tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxqualLimitUL_Prof1_3tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxqualLimitUL_Prof1_4tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxqualLimitUL_Prof2_3tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxqualLimitUL_Prof2_4tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sacchRepeatWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('saicDlCIOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedStepSizeDlHighPrior', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedStepSizeDlLowPrior', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedStepSizeDlNormPrior', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedStepSizeUlPrior1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedStepSizeUlPrior2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedStepSizeUlPrior3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedStepSizeUlPrior4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_backgroundARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_backgroundARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_backgroundARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_interactive1ARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_interactive1ARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_interactive1ARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_interactive2ARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_interactive2ARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_interactive2ARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_interactive3ARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_interactive3ARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_interactive3ARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_streamingARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_streamingARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('schedulingWeight_streamingARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sdcchAlLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('signallingPointCodeIN0', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('signallingPointCodeIN1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('signallingPointCodeNA0', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('signallingPointCodeNA1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('slowAmrLaEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('supervisionPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tchRateInternalHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tchTransactionCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('terrUpdGuardTGprs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('triggerMeasPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('variableDlStepSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('wcdmaRanSaiPenalty', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('BTS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('notAllowedAccessClasses', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('plmnPermitted', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('frequencyBandInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsMsTxPwrMaxCCH1x00', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minMsTxPower', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msTxPwrMaxCCH1x00', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msTxPwrMaxGSM1x00', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('angle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('insiteGateway', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adaptiveLaAlgorithm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adminState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('allowIMSIAttachDetach', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amhLowerLoadThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amhMaxLoadOfTgtCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amhTrhoGuardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amhUpperLoadThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfFrCodecModeSet', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfFrDlThreshold1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfFrDlThreshold2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfFrDlThreshold3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfFrHysteresis1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfFrHysteresis2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfFrHysteresis3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfFrInitCodecMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfFrStartMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfFrUlThreshold1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfFrUlThreshold2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfFrUlThreshold3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfHrCodecModeSet', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfHrDlThreshold1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfHrDlThreshold2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfHrDlThreshold3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfHrHysteresis1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfHrHysteresis2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfHrHysteresis3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfHrInitCodecMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfHrStartMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfHrUlThreshold1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfHrUlThreshold2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrConfHrUlThreshold3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrHoFrInHoThrDlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrHoFrThrDlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrHoFrThrUlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrHoHrInHoThrDlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrHoHrThrDlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrHoHrThrUlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrPocFrPcLThrDlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrPocFrPcLThrUlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrPocFrPcUThrDlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrPocFrPcUThrUlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrPocHrPcLThrDlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrPocHrPcLThrUlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrPocHrPcUThrDlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amrPocHrPcUThrUlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('antennaHopping', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bsIdentityCodeBCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bsIdentityCodeNCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsIsHopping', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsLoadInSeg', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsLoadThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsMeasAver', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsSpLoadDepTchRateLower', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsSpLoadDepTchRateUpper', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('callReestablishmentAllowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellBarQualify', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellBarred', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellLoadForChannelSearch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellNumberInBtsHw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellReselectHysteresis', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellReselectOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellReselectParamInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cnThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dedicatedGPRScapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('defaultGPRScapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('directGPRSAccessBts', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('diversityUsed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlNoiseLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drMethod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dtxMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('earlySendingIndication', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egprsEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egprsInitMcsAckMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egprsInitMcsUnAckMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egprsLinkAdaptEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egprsMaxBlerAckMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egprsMaxBlerUnAckMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egprsMeanBepOffset8psk', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egprsMeanBepOffsetGmsk', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('emergencyCallRestricted', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('fddQMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('fddQOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsMsTxpwrMaxCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsNonBCCHRxlevLower', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsNonBCCHRxlevUpper', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsRxlevAccessMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gsmPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hcsPriorityClass', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hcsThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoppingMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoppingSequenceNumber1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoppingSequenceNumber2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('idleStateBcchAllocListId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('inactEndTimeHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('inactEndTimeMinute', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('inactStartTimeHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('inactStartTimeMinute', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('inactWeekDays', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('csAckDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('csAckUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('csExtAckDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('csExtAckUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('csExtUnackDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('csExtUnackUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('csUnackDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('csUnackUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('initMcsExtAckMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('initMcsExtUnackMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interferenceAveragingProcessAverPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interferenceAveragingProcessBoundary0', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interferenceAveragingProcessBoundary1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interferenceAveragingProcessBoundary2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interferenceAveragingProcessBoundary3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interferenceAveragingProcessBoundary4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interferenceAveragingProcessBoundary5', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('locationAreaIdLAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('locationAreaIdMCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('locationAreaIdMNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lowPriorityThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maioOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maioStep', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('masterBcf', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxGPRSCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumberOfRepetition', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumberRetransmission', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxQueueLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxTimeLimitDirectedRetry', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('measListUsedDuringMeas', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('measurementBCCHAllocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minTimeLimitDirectedRetry', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msMaxDistInCallSetup', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msPriorityUsedInQueueing', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msTxPwrMaxCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msTxPwrMaxGSM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('multiBandCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('multiBandCellReporting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nbrOfSlotsSpreadTrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('newEstabCausesSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('noOfBlocksForAccessGrant', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('noOfMFramesBetweenPaging', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nonBCCHLayerOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nsei', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nwName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuCsHopping', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuCsNonHopping', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuDlBlerCpHopping', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuDlBlerCpNonHop', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuDlLaRiskLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuUlBlerCpHopping', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuUlBlerCpNonHop', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuUlLaRiskLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('penaltyTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('powerOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('preferBCCHfreqGPRS2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prioritySearchThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('psei', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qSearchI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qSearchP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('queuePriorityNonUrgentHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('queuePriorityUsed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('queueingPriorityCall', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('queueingPriorityHandover', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('raReselectHysteresis', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rac', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('radioLinkTimeout', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('radioLinkTimeoutAmr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('radiusExtension', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('reselectionAlgorithmHysteresis', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxLevAccessMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sectorId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('segmentId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('segmentName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('smsCbUsed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('stircEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tchRateIntraCellHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('temporaryOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('throughputFactor_cs1cs4dlcs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('throughputFactor_cs1cs4ulcs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('throughputFactor_mcs1mcs4ulcs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('throughputFactor_mcs1mcs9dlcs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('throughputFactor_mcs1mcs9ulcs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('timeHysteresis', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('timeLimitCall', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('timeLimitHandover', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('timerPeriodicUpdateMs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trxPriorityInTchAlloc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulNoiseLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('usedMobileAllocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('utranQualRxLevelMargin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('utranThresholdReselection', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('wcdmaPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('BTSSCL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsSyncMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ext1ppsClkOutOn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ext2M048ClkInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ext2M048ClkOutOn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gpsCtrlBlockForCoLocatedBts', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gpsInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('holdOverModeUsed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rfSharingEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('syncPropagationEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tdmSyncInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('BTSSCW',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a20WLicencesInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actDistributedSite15', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actRfChaining', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('antLineSupervisionEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('antRxLevelMonitoringEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('antTiltSupportEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsConfiguration', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cqiDefaultHsCellFach', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ext2M048ClkInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('extendedBtsSiteCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('fdeEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gpsCtrlBlockForCoLocatedBts', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gpsInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('happyBitPingFiltUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('happyBitUphThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hsdpa16QAMSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hsdpaBbResAllocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hsdpaFairPacketSched', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hsdpaSchedList_hsdpaThroughputStep_mod_sched', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('intShutdownInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iubClkInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxIubDelayThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('midIubDelayThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minIubDelayThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('numberOfBlindRepetitionHsCellFach', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('numberOfHSDPASet1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('numberOfHSDPASet2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('numberOfHSDPASet3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('numberOfHSUPASet1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('numberOfR99ChannelElements', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qosSchedList_ccPolicy_id_weight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('reservationPercentage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rncType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sharedHsdpaSheduler', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('singleCellInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actEthernetSec', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('assocMaxRetrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ext2M048ClkOutOn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mainsPowerAlarmId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('numOfLines', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pathMaxRetrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('syncPropagationEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('aldSwDownloadEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('CABINET',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cabinetType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('locationName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('CCFA',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableBundleUtlStatistics', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ubrPlusEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vccBundleEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('CERTH',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsCertificateUpdateTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('caCertificateUpdateTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cmpServerIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cmpServerPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('crServerIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('crServerPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('crlUpdatePeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CRLDPSource', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CRLUsageEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cmpDirectory', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('CESIF',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cesMinUDPPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('CMOB',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ACBarredListSystem', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CMOBChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CellAccessRestriction', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RestrictionGroupName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RestrictionGroupType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafficRestriction', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('COCO',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2LossRatio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2Multiplexing', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2MuxDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2QueueHSDPAWithFC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2QueueHSDPAWithoutFC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2QueueHSUPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2QueueNRTDCHWithoutFC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2QueueRTDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2SignLinkTP_AAL2SigCDVT01Egr_AAL2SigCDVT01Ing_AAL2SigEarlyPacketDiscard_AAL2SigEgressMDCR_AAL2SigEgressUBRShare_AAL2SigIngressMDCR_AAL2SigIngressUBRShare_AAL2SigPCR01Egr_AAL2SigPCR01Ing_AAL2SigPartialPacketDiscard_AAL2SigServiceCategory_AAL2SignLinkATMIfId_AAL2SignLinkTPId_AAL2SignLinkVCI_AAL2SignLinkVPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2TP_AAL2PathId_AAL2PathType_AAL2SignLinkATMIfId_AAL2SignLinkVCI_AAL2SignLinkVPI_AAL2UPATMIfId_AAL2UPCDVT01Egr_AAL2UPCDVT01Ing_AAL2UPEgressMDCR_AAL2UPEgressUBRShare_AAL2UPIngressMDCR_AAL2UPIngressUBRShare_AAL2UPPCR01Egr_AAL2UPPCR01Ing_AAL2UPServiceCategory_AAL2UPUsage_AAL2UPVCI_AAL2UPVPI_COCOA2EA_VCCInBundle_WAMId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ATMEPProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPCDVT01Egr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPCDVT01Ing', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPEarlyPacketDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPEgressMDCR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPEgressUBRShare', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPIngressMDCR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPIngressUBRShare', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPPCR01Egr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPPCR01Ing', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPPartialPacketDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPServiceCategory', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPTPATMIfId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPVCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPVPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('COCOChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CalculateCDVT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CreateATMTP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DNBAPTP_CControlPortID_DNBAPATMIfId_DNBAPCDVT01Egr_DNBAPCDVT01Ing_DNBAPEarlyPacketDiscard_DNBAPEgressMDCR_DNBAPEgressUBRShare_DNBAPIngressMDCR_DNBAPIngressUBRShare_DNBAPPCR01Egr_DNBAPPCR01Ing_DNBAPPartialPacketDiscard_DNBAPServiceCategory_DNBAPVCI_DNBAPVPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GenerateAAL2Num', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InternalHSDPAFCMethodBTS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCCBundleParams_VCCBundleEBS_VCCBundleId_VCCBundlePCR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VPLTP_COCOVPI_VPLTPATMIfId_VPLTPCDVT01Egr_VPLTPEgressMDCR_VPLTPPCR01Egr_VPLTPServiceCategory_VPLTPTrafficShaping', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WBTSId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('CONNECTOR',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('destinationConnector', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('destinationHolder', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('location', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('CTRLTS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('extCellTraceRep', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('extUeTraceRep', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxUeTraceSessions', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('netActIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('omsTracePortNum', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tceTracePortNum', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellTraceRepMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ueTraceRepMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('taTracing', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('DAP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bcsuID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('firstTSL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lastTSL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('logicalBCSUAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcmCircuit_ID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('psei', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ETHLK',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('acceptableFrameTypes', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('flushFdbOnLos', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('l2BurstSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('l2IngressRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('l2ShaperRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('linkFlappingPreventionTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('linkOAMEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('macAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('portDefaultPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('portDefaultVlanId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('speedAndDuplex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('synchEMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('l2VlanIdList_highValue_lowValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('l2VlanIdList_highValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('FMCG',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRDirReCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLDPCHTxPwrClOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FMCGChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GSMcauseCPICHEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GSMcauseCPICHrscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GSMcauseTxPwrDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GSMcauseTxPwrUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GSMcauseUplinkQuality', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmDLTxPwrThrAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmDLTxPwrThrCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmDLTxPwrThrNrtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmDLTxPwrThrRtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmMaxMeasPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmMeasAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmMeasRepInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmMinHoInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmMinMeasInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmMinSLHOInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmNcellSearchPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmUETxPwrFilterCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmUETxPwrThrAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmUETxPwrThrCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmUETxPwrThrNrtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmUETxPwrThrRtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmUETxPwrTimeHyst', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ISHOClcauseCPICHEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ISHOClcauseCPICHrscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ISHOClcauseTxPwrDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ISHOClcauseTxPwrUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxBSICIdentTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('FMCI',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FMCIChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IFHOcauseCPICHEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IFHOcauseCPICHrscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IFHOcauseTxPwrDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IFHOcauseTxPwrUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IFHOcauseUplinkQuality', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqDLTxPwrThrAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqDLTxPwrThrCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqDLTxPwrThrNrtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqDLTxPwrThrRtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqMaxMeasPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqMeasAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqMeasRepInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqMinHoInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqMinMeasInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqMinSLHOInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqNcellSearchPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqUETxPwrFilterCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqUETxPwrThrAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqUETxPwrThrCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqUETxPwrThrNrtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqUETxPwrThrRtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqUETxPwrTimeHyst', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MBLBMobilityOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MBLBMobilityRABComb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('FMCS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ActiveSetWeightingCoefficient', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdditionReportingInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdditionTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdditionWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DSRepBasedSHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DropReportingInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DropTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DropWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHAddEcNoOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHRemEcNoOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EcNoFilterCoefficient', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FMCSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoEcNoCancel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoEcNoCancelTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoEcNoThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoEcNoTimeHysteresis', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoRscpCancel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoRscpCancelTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoRscpFilterCoefficient', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoRscpThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoRscpTimeHysteresis', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxActiveSetSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ReplacementReportingInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ReplacementTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ReplacementWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('FTM',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adaptationVersionMajor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('locationName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('softwareReleaseVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('systemTitle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('userLabel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('FUUNIT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('functionalUnitType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('supportedByUnit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('GPC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qcTputThrModes_egprsDlRlcAckMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qcTputThrModes_egprsUlRlcAckMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qcTputThrModes_gprsDlRlcAckMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qcTputThrModes_gprsUlRlcAckMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('GTPU',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gtpuN3Reqs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gtpuPathSupint', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gtpuT3Resp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sgwIpAddressList_sgwIpAddress_transportNwId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('HOC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('allAdjacentCellsAveraged', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('allUtranAdjAver', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amhTrafficControlIUO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amhTrafficControlMCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amhTrhoPbgtMargin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('averagingWindowSizeAdjCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ddeThresholdsLevNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ddeThresholdsLevPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ddeThresholdsLevRxLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ddeWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enaFastAveCallSetup', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enaFastAveHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enaFastAvePc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enaHierCellHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableIntraHoDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableIntraHoUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableMsDistance', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enablePowerBudgetHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableSddchHandover', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableUmbrellaHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('erfdEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('erfdOver', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('failMoveThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gsmPlmnPriorisation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoAvaragingLevDLWeighting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoAvaragingLevDlWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoAveragingLevUlWeighting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoAveragingLevUlWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoAveragingQualDlWeighting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoAveragingQualDlWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoAveragingQualUlWeighting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoAveragingQualUlWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoPeriodPbgt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoPeriodUmbrella', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoTLDlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoTLDlRxLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoTLUlNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoTLUlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoTLUlRxLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoTQDlNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoTQDlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoTQDlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoTQUlNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoTQUlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoTQUlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoThrInterferenceDlNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoThrInterferenceDlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoThresholdsInterferenceDlRxLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoThresholdsInterferenceULNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoThresholdsInterferenceULPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoThresholdsInterferenceULRxLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoThresholdsLevDLNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoThresholdsRapidLevUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hoThresholdsRapidLevUlN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interSystemDa', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('intraHoLoRxLevLimAmrHr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('intraHoLoRxQualLimAmr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('intraHoUpRxLevLimAmrHr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxMsDistanceHoThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minIntBetweenHoReq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minIntBetweenUnsuccHoAttempt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minIntUnsuccIsHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minMsDistanceHoThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('modifiedAveWinNCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('modifiedNoz', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msDHoThrParamN8', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msDistanceAveragingParamHreqave', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msDistanceHoThresholdParamMsRangeMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('msDistanceHoThresholdParamP8', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('multiratRep', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('noOfZeroResUtran', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nonBcchLayerAccessThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nonBcchLayerExitThr_nx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nonBcchLayerExitThr_px', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('numberOfZeroResults', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qSearchC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rxLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('utranAveragingNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('utranHoThScTpdc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('wcdmaRanCellPenalty', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('HOPG',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgHCSpriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgHCSthreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgMinRxLevNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgPenaltyTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgPenaltyTimeNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgPriorityCoverage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgPrioritySLHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgQoffset1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgQrxlevMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgRxLevMinHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjgTempOffset1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HOPGChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('HOPI',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiEcNoMargin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiHCSpriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiHCSthreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiMinEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiMinEcNoNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiMinRSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiMinRscpNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiPenaltyTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiPenaltyTimeNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiPlossMargin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiPriorityCoverage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiPriorityDCellCAHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiPriorityHSCAHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiPriorityMIMOCAHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiPriorityQuality', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiPrioritySLHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiQoffset1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiQoffset2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiQqualMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiQrxlevMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiTempOffset1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjiTempOffset2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('BlindHORSCPThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HOPIChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('HOPL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjLAbsPrioCellReselec', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjLFreqPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjLQqualminEUTRA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjLQrxlevminEUTRA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjLThreshigh', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjLThreshigh2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjLThreslow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjLThreslow2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HOPLChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('HOPS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsHCSpriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsHCSthreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsPenaltyTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsQoffset1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsQoffset2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsQqualMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsQrxlevMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsTempOffset1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjsTempOffset2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EcNoAveragingWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EnableInterRNCsho', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EnableRRCRelease', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHOMarginAverageEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHOMarginPeakEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HOPSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAAvailabilityIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSUPAAvailabilityIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ReleaseMarginAverageEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ReleaseMarginPeakEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('HW',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NEType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('locationName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('operationalState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('systemTitle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vendorName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('serialNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('softwareReleaseVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('systemReleaseVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IAIF',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('destIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('atmIfId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('encapsulationMethod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('usage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vci', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vpi', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IBFD',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('alarmEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bfdEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dstIp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipbrId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('profileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sessionType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('srcIp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IBFP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('desiredMinTx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('detectMult', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('profileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('requiredMinRx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IDNS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cache', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('localDomain', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('roundRobin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('serverIPAddr_addrValue_addrVer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('serverIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('serverIpAddress2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IDSP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dscpProfileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('profileList_dscpNumber_phb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IEIF',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cir', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('confCost', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('helloInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipAddr_localIpAddr_netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtu', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtuMismatchDetection', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ospfWithBfd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qosEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('retransInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('routerDeadInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sbs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sbsTotal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('shapedBandwidth', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sir', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sirTotal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trafficPathShapingEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('transmitDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('upperLayerShaping', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vlanEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vlanId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPV4Addr_addrTypeIPV4_addrValueIPV4_destAddrIPV4_netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ifType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPV4Addr_addrTypeIPV4_addrValueIPV4_netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('localIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('localIpv6Addr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('localIpv6PrefixLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('wfqSchedQueueWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IFPG',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('transIfPuPtrs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IGIF',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RncEthernetBw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ethInterfaceRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IHCP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IICP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('echoReplyTmout', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('echoReqPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxLostPkt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('payloadLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IMAG',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('imaVersionId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interfaces', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minNumLinks', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('INTP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ntpServers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IPBR',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('committedBW', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('committedDcnBW', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('committedSigBW', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ifcFlag', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipBasedRouteName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('localMuxUDPPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxMuxPackets', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ratio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('remoteMuxUDPPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('routeBW', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('udpMuxDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('udpMuxEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IPHB',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phbProfileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('profileList_maxDrop_maxThreshold_minThreshold_phb_quePriority_queWeight_schedule_vlanPri', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('profileList_maxDrop_maxThreshold_minThreshold_phb_quePriority_schedule_vlanPri', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IPNB',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNBAPICSUIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SCTPPortNumberCNBAP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DNBAP_CControlPortID_DNBAPICSUIndex_SCTPPortNumberDNBAP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPBasedRouteId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPNBChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxSCTPFrameSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MinSCTPPortIub', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBAPDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NodeBIPAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WBTSId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IPNO',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bfdHoldUpTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('btsSubnetMacAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cesopsnIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('disableFtp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableSoam', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('flexBusIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('fpLocalUdpPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('fpMuxAmount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('fpMuxDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('fpRemoteUdpPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ftmIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ftmNetmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iHSPAmode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('icmpResponseEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('linkOAMLoopbackSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtu', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('oamCir', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('oamTlvReply', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('omsTls', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ret1IpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rncIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('transportMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('twampMessageRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cPlaneIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mPlaneIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('planeMacAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sPlaneIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('twampFlag_twampIpAddress_twampReflFlag_udpEchoFlag', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uPlane2IpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uPlaneIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPForwardingIPV4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('defaultTTL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('subnetsAreLocal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hostName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actFastIpRerouting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actIpTnlMeasure', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actIpv6', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actSeparationRanSharing', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cPlaneIpv6Address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ftmBtsSubnetAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ftmBtsSubnetMask', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mainTransportNwId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('oamIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('retransTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('secOmsIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('servingOms', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('servingOmsAdminSetting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('twampReflectorPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uPlaneIpv6Address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('wfqSchedOamWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IPQM',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('BackgroundTCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ConversationalTCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPQMChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InteractiveTHP1TCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InteractiveTHP2TCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InteractiveTHP3TCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('StreamingTCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IPRM',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RmExceptions_sourceTwoDiscr_userLabel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IPRO',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('addrValueIPV4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ifName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipBasedRouteId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phbAF1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phbAF2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phbAF3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phbAF4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phbBE', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phbEF', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IPRT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('staticRoutes_bfdId_destIpAddr_gateway_netmask_preference', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IPRTV6',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IPSECC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipSecEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipSecEmBypassCtrlIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipSecEmBypassEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipSecEmBypassPingTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipSecEmBypassState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IQOS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dspmProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dspmProfileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phbProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phbProfileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('status', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ISBFP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('desiredMinTx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('detectMult', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('holdupTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('profileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('requiredMinRx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ITRKGRP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trkGrpBoolVal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trkGrpOperation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trkType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('ITRKOBJ',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IUBSNT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPV4MaskLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPV4SubnetAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('assocMaxRetrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hbInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxInitRetrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pathMaxRetrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rtoInitial', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rtoMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rtoMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sackPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('validCookieLife', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IUCS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2PTSigForIuCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNDomainVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CSCNNRI_NRIMaxForCSCN_NRIMinForCSCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CSFlexiIuWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DefaultCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IUCSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IUOIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IuState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MinUDPPortCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NetworkInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RelocationSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtcpActivation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SignPointCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TRafC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TRatC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TigOR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TinTR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IUCSIP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DestIPAddressCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPBasedRouteIdCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPNetmaskCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPQMIdCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IUCSIPChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IUO',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CSCNDRXLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CS_T3212', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IUOChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IuBarringDelayTimerCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IuBarringDelayTimerPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IuBarringRecoveryGroupCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IuBarringRecoveryGroupPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IuBarringRecoveryTimerCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IuBarringRecoveryTimerPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IubTransportSharingInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NRILengthForCSCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NRILengthForPSCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NullNRIForCSPool', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NullNRIForPSPool', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('OperatorWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MNCLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PSCNDRXLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PS_NMO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IUPS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNDomainVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CNId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CellFACHRelocSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DefaultCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IUOIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IUPSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IuState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NetworkInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PSCNNRI_NRIMaxForPSCN_NRIMinForPSCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PSFlexiIuWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RelocationSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SignPointCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TDataFwd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TRafC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TRatC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TigOR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TinTR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IUPSIP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DestIPAddressPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPBasedRouteIdPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPNetmaskPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPQMIdPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IUPSIPChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IUR',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NeighbouringPLMNid_MCC_MNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AAL2PTSigForIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CellFACHnRncRelocSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DSCPHighIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DSCPLowIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DSCPMedDCHIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DelayThresholdMaxIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DelayThresholdMidIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DelayThresholdMinIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPACCEnabledIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAULCToDSCPIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPAOverIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSUPACCIurEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSUPADLCToDSCPIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IBTSSharing', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPBasedRouteIdIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IURChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterfaceMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IurUPSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxFPDLFrameSizeIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxIurNRTHSDSCHBitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MinUDPPortIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NRncId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NRncNetworkInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NRncRelocationSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NRncSignPointCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NRncVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NeighbouringRNWElement', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('OverbookingSwitchIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ProbabilityFactorMaxIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNSAPCongAndPreemption', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWEOffsetNRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWEOffsetRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWSOffsetNRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWSOffsetRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('IVIF',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cESoPSN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cir', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('confCost', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('helloInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('localIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtuMismatchDetection', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ospfWithBfd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qosEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('retransInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('routerDeadInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sbs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sir', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('transmitDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vlanId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('parentInterface', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('localIpv6Addr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('localIpv6PrefixLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('wfqSchedQueueWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('L2SWI',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('defaultPCPUntagged', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dscpMap_dscp_priorityQueue', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableLayer2Switching', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('l2PriorityQueueWeight2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('l2PriorityQueueWeight3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('l2PriorityQueueWeight4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('portDefaultPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('portDefaultVlanId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('priorityQueueNonIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('priorityQueuePcp0', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('priorityQueuePcp1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('priorityQueuePcp2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('priorityQueuePcp3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('priorityQueuePcp4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('priorityQueuePcp5', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('priorityQueuePcp6', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('priorityQueuePcp7', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qosClassification', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vlanAwareSwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('l2PriorityQueueWeight5', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('l2PriorityQueueWeight6', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('priorityQueueUntagged', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LAPD',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('abisSigChannelSubSlot', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('abisSigChannelTimeSlotPcm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('abisSigChannelTimeSlotTsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adminState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dChannelType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('logicalBCSUAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('parameterSetNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sapi', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tei', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LCELGW',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('accessBbCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellGroupName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dedicatedBbCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hsupaBbDecodCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hsupaBbMinimumUsers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lCelIdList', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minNumHsfachUsers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sModId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('shareOfHSDPAUser', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('shareOfHSUPALicences', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LCELL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('resourceList_antlId_txRxUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LCELW',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('allowedCarrierList', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellRange', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('defaultCarrier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('expirationTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hspaMapping', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('intShutdownTimeout', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxCarrierPower', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mimoType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rachCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('resourceList_antlId_txRxUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('shutdownStepAmount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('shutdownWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vamEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LNADJ',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('guGroupIdList_mcc_mmeGroupId_mnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('targetBtsDn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adjEnbId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cPlaneIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cPlaneIpAddrCtrl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('x2LinkStatus', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LNADJL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bcPlmnIdList_mcc_mnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlTrmBw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ecgiAdjEnbId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ecgiLcrId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('fDlEarfcn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('fUlEarfcn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phyCellId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sourceOfData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tac', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulTrmBw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LNADJW',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('targetCellDn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('srvccHoInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uTargetCid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uTargetFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uTargetLac', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uTargetRac', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uTargetRncId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uTargetScFdd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LNBTS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('act1xCsfb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('act8EpsBearers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actCMAS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actCSFBRedir', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actCellTrace', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actCellTraceWithIMSI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actCiphering', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actCompChecks', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actConvVoice', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actCplaneOvlHandling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actCsfbPsHoToUtra', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actDLCAggr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actDistributedSite', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actDualBand', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actDualCarrier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actDualRx1xCsfb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actERabModify', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actETWS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actEmerCallRedir', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actEnhAcAndGbrServices', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actFlexBbUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actGsmRedirWithSI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actHOtoHrpd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actHOtoWcdma', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actHeNBMobility', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actHighPrioServices', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actHighRrc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actHoFromUtran', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actIMSEmerSessR9', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actIdleLB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actIfHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actImmHRPD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actImmXrtt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actInterFreqLB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actIntraFreqLoadBal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actLPPaOtdoa', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actLTES1Ho', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actLocRep', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actMDTCellTrace', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actMFBI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actMultBearers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actMultGbrBearers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actNonGbrServiceDiff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actOTNRecovery', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actOperatorQCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actOperatorQCIGBR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actOptMmeSelection', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actPdcpRohc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actRIMforGSM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actRedirect', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actRfChaining', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actS1Flex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actS1OlHandling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actSelMobPrf', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actSrvccToGsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actSrvccToWcdma', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actSubscriberTrace', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actUeBasedAnrInterFreqLte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actUeBasedAnrIntraFreqLte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actUeBasedAnrUtran', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actUlCoMp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actZUC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('acteNACCtoGSM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab1dlPollByte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab1ueCategory', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab1ulPollByte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab2dlPollByte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab2ueCategory', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab2ulPollByte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab3dlPollByte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab3ueCategory', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab3ulPollByte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab4dlPollByte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab4ueCategory', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab4ulPollByte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab5dlPollByte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab5ueCategory', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('amRlcPBTab5ulPollByte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('anrIfTRSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('anrOmExtEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('anrRobLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('caMinDlAmbr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eea0', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eea1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eea2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eea3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('congWeightAlg', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('defProfIdxAM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('defProfIdxUM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableAutoLock', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableGrflShdn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enbName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('etwsPrimNotifBcDur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hpsSessArpMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hpsSessArpMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eia0', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eia1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eia2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eia3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('keyRefrMarg', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumOfLnadjLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumPreEmptions', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumX2LinksIn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumX2LinksOut', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minNotActivatedUtraRSCFS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('moProfileSelect', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nRimRirG', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nullFallback', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('operationalState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('otnRecoveryPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actInHORed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actRrcConnRed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pbrNonGbr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf1pdcpProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf1statusRepReq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf1tDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf101pdcpProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf101rohcMaxCid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf101snSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf101tDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf102pdcpProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf102snSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf102tDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf103pdcpProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf103snSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf103tDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf104pdcpProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf104snSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf104tDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf2pdcpProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf2statusRepReq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf2tDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf3pdcpProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf3statusRepReq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf3tDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf4pdcpProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf4statusRepReq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf4tDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf5pdcpProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf5statusRepReq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcpProf5tDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prioTopoHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prohibitLBHOTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prohibitPsHOtoWcdma', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pwsWithEmAreaId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1delayTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1enforceTtiBundling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1lcgid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1maxGbrDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1maxGbrUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1pdcpProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1prio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1qci', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1qciSupp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1resType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1rlcMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1rlcProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1schedulBSD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab1schedulPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2delayTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2enforceTtiBundling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2l2OHFactorDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2l2OHFactorUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2lcgid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2maxGbrDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2maxGbrUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2pdcpProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2prio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2qci', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2qciSupp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2resType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2rlcMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2rlcProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2schedulBSD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab2schedulPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3delayTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3enforceTtiBundling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3l2OHFactorDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3l2OHFactorUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3lcgid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3maxGbrDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3maxGbrUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3pdcpProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3prio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3qci', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3qciSupp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3resType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3rlcMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3rlcProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3schedulBSD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab3schedulPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4delayTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4enforceTtiBundling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4l2OHFactorDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4l2OHFactorUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4lcgid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4maxGbrDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4maxGbrUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4pdcpProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4prio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4qci', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4qciSupp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4resType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4rlcMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4rlcProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4schedulBSD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab4schedulPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5enforceTtiBundling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5lcgid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5pdcpProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5prio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5qci', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5qciSupp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5resType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5rlcMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5rlcProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5schedulBSD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5schedulPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5schedulType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab5schedulWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6enforceTtiBundling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6lcgid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6pdcpProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6prio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6qci', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6qciSupp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6resType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6rlcMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6rlcProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6schedulBSD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6schedulPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab6schedulWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7enforceTtiBundling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7lcgid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7pdcpProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7prio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7qci', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7qciSupp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7resType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7rlcMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7rlcProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7schedulBSD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7schedulPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab7schedulWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8enforceTtiBundling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8lcgid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8pdcpProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8prio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8qci', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8qciSupp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8resType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8rlcMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8rlcProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8schedulBSD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8schedulPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab8schedulWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9enforceTtiBundling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9lcgid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9pdcpProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9prio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9qci', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9qciSupp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9resType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9rlcMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9rlcProfIdx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9schedulBSD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9schedulPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qciTab9schedulWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rachAccessForHoFromUtran', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('recoveryResetDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf1pollPdu', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf1rlcProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf1tPollRetr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf1tProhib', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf1tReord', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf101rlcProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf101snFieldLengthDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf101snFieldLengthUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf101tReord', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf102rlcProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf102snFieldLengthDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf102snFieldLengthUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf102tReord', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf103rlcProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf103snFieldLengthDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf103snFieldLengthUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf103tReord', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf104rlcProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf104snFieldLengthDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf104snFieldLengthUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf104tReord', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf2pollPdu', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf2rlcProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf2tPollRetr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf2tProhib', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf2tReord', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf3pollPdu', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf3rlcProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf3tPollRetr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf3tProhib', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf3tReord', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf4pollPdu', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf4rlcProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf4tPollRetr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf4tProhib', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf4tReord', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf5pollPdu', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf5rlcProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf5tPollRetr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf5tProhib', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rlcProf5tReord', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('s1InducedCellDeactDelayTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sCellActivationCyclePeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sCellActivationMethod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sCellDeactivationTimereNB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sCellpCellHARQFdbkUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('shutdownStepAmount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('shutdownWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('supportedNumOfLnadj', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tRimKaG', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tRimPollG', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tRimRirG', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tS1RelPrepG', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tS1RelPrepL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tS1RelPrepU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tagMaxAM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tagMaxUM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('timDelACContPreempt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ttiBundlingDuringHoMeas', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('txPathFailureMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcRssiMaxIAw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('voiceSuppMatchInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LNCEL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('deploymentType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('furtherPlmnIdL_mcc_mnc_cellReserve', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a1TimeToTriggerDeactInterMeas', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a2TimeToTriggerActGERANMeas', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a2TimeToTriggerActHrpdMeas', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a2TimeToTriggerActInterFreqMeas', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a2TimeToTriggerActWcdmaMeas', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a2TimeToTriggerRedirect', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a3Offset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a3ReportInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a3TimeToTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a5ReportInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a5TimeToTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actDlsOldtc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actDlsVoicePacketAgg', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actDrx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actFastMimoSwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actLdPdcch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actModulationSchemeUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actNoIntraBandIFMeasurements', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actOlLaPdcch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actOtdoa', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actPrsTxDiv', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actPuschMask', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actRepeaterMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actSixIfMeasurements', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actSmartDrx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actSuperCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actTtiBundling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actUlGrpHop', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actUlLnkAdp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actUlpcMethod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('addAUeRrHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('addAUeTcHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('addEmergencySessions', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('addGbrTrafficRrHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('addGbrTrafficTcHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('addNumDrbRadioReasHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('addNumDrbTimeCriticalHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('addNumQci1DrbRadioReasHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('addNumQci1DrbTimeCriticalHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('addSpectrEmi', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('anrUtraRscpThres', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('applyOutOfSyncState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('blankedPucch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tC2KMeasReport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tC2KRelocPrep', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tC2kRelocExec', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tULHOPrepTransfer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('celResTiFHM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('celResTiFMM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellBarred', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellCapClass', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellIndOffServ', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellReSelPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellResourceSharingMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellSelectionInfoV920qQualMinR9', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellSrPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cqiAperEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cqiAperMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cqiPerNp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cqiPerSbCycK', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cqiPerSimulAck', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dFpucchF1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dFpucchF1b', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dFpucchF2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dFpucchF2a', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dFpucchF2b', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dSrTransMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('defPagCyc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('deltaMargin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('deltaPreMsg3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('deltaPucchShift', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('deltaTfEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dl64QamEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlCellPwrRed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlChBw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlInterferenceEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlInterferenceLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlInterferenceModulation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlMimoMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlOlqcEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlPathlossChg', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlPcfichBoost', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlPhichBoost', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlRsBoost', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlTargetBler', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlamcCqiDef', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlamcEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlpcMimoComp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlsDciCch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlsFdAlg', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlsOldtcTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dlsUsePartPrb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxApplyDeviceType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile1drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile1drxProfilePriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile101drxInactivityT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile101drxLongCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile101drxOnDuratT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile101drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile101drxProfilePriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile101drxRetransT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile102drxInactivityT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile102drxLongCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile102drxOnDuratT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile102drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile102drxProfilePriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile102drxRetransT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile103drxInactivityT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile103drxLongCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile103drxOnDuratT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile103drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile103drxProfilePriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile103drxRetransT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile2drxInactivityT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile2drxLongCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile2drxOnDuratT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile2drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile2drxProfilePriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile2drxRetransT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile3drxInactivityT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile3drxLongCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile3drxOnDuratT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile3drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile3drxProfilePriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile3drxRetransT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile4drxInactivityT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile4drxLongCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile4drxOnDuratT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile4drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile4drxProfilePriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile4drxRetransT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile5drxInactivityT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile5drxLongCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile5drxOnDuratT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile5drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile5drxProfilePriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxProfile5drxRetransT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile2drxInactivityT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile2drxLongCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile2drxOnDuratT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile2drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile2drxProfilePriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile2drxRetransT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile2drxShortCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile2drxShortCycleT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile2smartStInactFactor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile3drxInactivityT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile3drxLongCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile3drxOnDuratT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile3drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile3drxProfilePriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile3drxRetransT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile3drxShortCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile3drxShortCycleT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile3smartStInactFactor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile4drxInactivityT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile4drxLongCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile4drxOnDuratT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile4drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile4drxProfilePriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile4drxRetransT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile4drxShortCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile4drxShortCycleT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile4smartStInactFactor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile5drxInactivityT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile5drxLongCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile5drxOnDuratT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile5drxProfileIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile5drxProfilePriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile5drxRetransT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile5drxShortCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile5drxShortCycleT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('drxSmartProfile5smartStInactFactor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eCallAcBarred', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eUlLaAtbPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eUlLaBlerAveWin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eUlLaDeltaMcs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eUlLaLowMcsThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eUlLaLowPrbThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eUlLaPrbIncDecFactor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('earfcnDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('earfcnUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableAmcPdcch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableBetterCellHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableCovHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableDl16Qam', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableLowAgg', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enablePcPdcch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eutraCelId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('altitude', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('confidence', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('degreesOfLatitude', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('degreesOfLongitude', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('directionOfAltitude', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('latitudeSign', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('orientationOfMajorAxis', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uncertaintyAltitude', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uncertaintySemiMajor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uncertaintySemiMinor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('fUlLAAtbTrigThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('filterCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('filterCoefficientCSFBCpichEcn0', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('filterCoefficientCSFBCpichRscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('filterCoefficientCpichEcn0', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('filterCoefficientCpichRscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('filterCoefficientRSRP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('filterCoefficientRSRQ', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('filterCoefficientRSSI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gbrCongHandling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('grpAssigPUSCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('harqMaxMsg3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('harqMaxTrDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('harqMaxTrUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('harqMaxTrUlTtiBundling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hopModePusch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tC2KRelocOverallHrpd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tC2KRelocPrepHrpd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tUlHoPrepTransferHrpd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hysA3Offset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hysThreshold2GERAN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hysThreshold2Hrpd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hysThreshold2InterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hysThreshold2Wcdma', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hysThreshold2a', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hysThreshold3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hysThreshold4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iFLBBearCheckTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iFLBHighLoadGBRDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iFLBHighLoadNonGBRDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iFLBHighLoadPdcch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iFLBNomNumPrb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iFLBRetryTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iFLBTargetLoadGBRDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iFLBTargetLoadNonGBRDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iFLBTargetLoadPdcch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('idleLBCelResWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('idleLBPercentageOfUes', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ilReacTimerUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('inactivityTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iniMcsDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iniMcsUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('iniPrbsUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('intrFrqCelRes', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('intraPresAntP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lcrId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('loadBalancingProfile', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lowerMarginCIO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxBitrateDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxBitrateUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxCrPgDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxCrRa4Dl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxCrRaDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxCrSibDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxGbrTrafficLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNrSymPdcch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumActDrb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumActUE', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumCaConfUeDc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumQci1Drb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumRrc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumRrcEmergency', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumUeDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumUeUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mbrSelector', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('measQuantityCSFBUtra', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('measQuantityUtra', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mimoClCqiThD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mimoClCqiThU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mimoClRiThD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mimoClRiThU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mimoOlCqiThD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mimoOlCqiThU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mimoOlRiThD', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mimoOlRiThU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minBitrateDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minBitrateUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mobStateParamNCelChgHgh', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mobStateParamNCelChgMed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mobStateParamTEval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mobStateParamTHystNorm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('modPeriodCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('n1PucchAn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('n310', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('n311', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nCqiRb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('offsetFreqIntra', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('operationalState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('p0NomPucch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('p0NomPusch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pagingNb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcchAggDefUe', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcchAggMsg4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcchAggPaging', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcchAggPreamb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcchAggRaresp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcchAggSib', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcchAlpha', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcchCqiShift', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcchHarqTargetBler', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdcchUlDlBal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('periodicCqiFeedbackType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('activateMeas', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('measurementType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('reportAmount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('reportInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phichDur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phichRes', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phyCellId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prachCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prachConfIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prachFreqOff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prachHsFlag', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prachPwrRamp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('preambTxMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('primPlmnCellres', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prsConfigurationIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prsMutingInfo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prsMutingInfoPatternLen', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prsNumDlFrames', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prsPowerBoost', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pucchNAnCs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('puschAckOffI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('puschCqiOffI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('puschRiOffI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qHyst', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qQualMinR9', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qrxlevmin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qrxlevminintraF', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('raContResoT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('raLargeMcsUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('raMsgPoffGrB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('raNondedPreamb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('raPreGrASize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('raRespWinSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('raSmallMcsUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('raSmallVolUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rand', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rcAmbrMgnDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rcAmbrMgnUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rcEnableDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rcEnableUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('redBwEnDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('redBwMaxRbDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('redBwMaxRbUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('redBwMinRbUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('redBwRpaEnUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('riEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('riPerM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('riPerOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rootSeqIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a1ReportInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a2TimeToTriggerMobRsrq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hysThreshold2MobRsrq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshold2MobRsrq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshold2aRsrq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('a2TimeToTriggerRedirectRsrq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hysThreshold4Rsrq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshold4Rsrq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rttCellIdInfo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rttCsfbType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sIntraSearchPR9', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sIntraSearchQR9', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sIntrasearch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sNonIntraSearchPR9', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sNonIntraSearchQR9', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sNonIntrsearch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('siWindowLen', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sib2SchedulingsiMessagePeriodicity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sib2SchedulingsiMessageRepetition', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sib2SchedulingsiMessageSibType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sib3SchedulingsiMessagePeriodicity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sib3SchedulingsiMessageRepetition', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sib3SchedulingsiMessageSibType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sibSchedulingList_siMessagePeriodicity_siMessageRepetition_siMessageSibType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nCellChgHigh', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nCellChgMed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qHystSfHigh', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('qHystSfMed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tEvaluation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tHystNormal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('srbSchedWeightDl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('srbSchedWeightUl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('srsPwrOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('stInactFactor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('syncSigTxMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('t300', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('t301', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('t302', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('t304InterRAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('t304InterRATGsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('t304IntraLte', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('t304eNaccGsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('t310', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('t311', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('t320', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tExtendedWait', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tPageCorrInt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tPeriodicBsr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tPeriodicPhr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tProhibitPhr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tReTxBsrTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tReselEutr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tStoreUeCntxt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('taMaxOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('taTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('taTimerMargin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tac', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshSrvLow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshold1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshold2GERAN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshold2Hrpd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshold2InterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshold2Wcdma', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshold2a', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshold3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshold3a', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('threshold4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('timeToTriggerSfHigh', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('timeToTriggerSfMedium', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ttiBundlingBlerTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ttiBundlingBlerThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ttiBundlingSinrThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulChBw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulCombinationMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulRsCs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulTargetBler', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulamcAllTbEn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulamcSwitchPer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulatbEventPer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcAlpha', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('p0NomPuschIAw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcCEBalanceIAw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcMinQualIAw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcMinWaitForPc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcRefPwrIAw', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcIniPrePwr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcLowlevCch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcLowqualCch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcUplevCch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcUpqualCch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcLowlevSch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcLowqualSch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcUplevSch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcUpqualSch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcRarespTpc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulpcReadPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulsFdPrbAssignAlg', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulsMaxPacketAgg', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulsMinRbPerUe', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulsMinTbs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ulsSchedMethod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('deltaFPucchF1bCSr10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('deltaFPucchF3r10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('upperMarginCIO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LNHOW',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('b1ThresholdCSFBUtraEcn0', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('b1ThresholdCSFBUtraRscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('b1TimeToTriggerCSFBUtraMeas', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('b2Threshold1Utra', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('b2Threshold2UtraEcn0', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('b2Threshold2UtraRscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('b2TimeToTriggerUtraMeas', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hysB1ThresholdCSFBUtra', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hysB2ThresholdUtra', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxNumCsfbTargets', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('offsetFreqUtra', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('reportIntervalUtra', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('utraCarrierFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LNMME',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('accMmePlmnsList_mcc_mnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipAddrPrim', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipAddrSec', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('relMmeCap', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('s1LinkStatus', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('transportNwId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LNREL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellIndOffNeigh', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ecgiAdjEnbId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ecgiLcrId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('handoverAllowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nrControl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nrStatus', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('LTAC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tacLimitGbrEmergency', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tacLimitGbrHandover', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tacLimitGbrNormal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('transportNwId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('MAL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('frequency', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('frequencyBandInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('MHA',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('active', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('aisgProtocol', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('alarmThresholdLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('antBearing', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('antModel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('antSerial', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('antlId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('baseStationID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('connection', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('downlinkDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gainResolution', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('hwVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('installerID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lnaNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('manufacturer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxGain', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mhaAisgModeEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mhaAlarmDetection', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mhaGain', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mhaType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minGain', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prodCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('releaseId3Gpp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('scannedAntennaInterface', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sectorID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('serNum', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('substance', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('swVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tmaSubunitRxFreqBandMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tmaSubunitRxFreqBandMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tmaSubunitTxFreqBandMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tmaSubunitTxFreqBandMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tmaSubunitType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('uplinkDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('wmhConnector', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('installDate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('MODULE',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('identificationCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('state', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('subrackSpecificType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('userLabel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vendorName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('serialNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('MRBTS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actSwMonitoring', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('autoConfBlocked', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('commissioningRequired', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enAutoLicReq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('resetToTestDedicated', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sharedRfTechnologies', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('timeZone', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitList_primaryConnection_prodCode_unitName_unitNumber_variant', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitList_primaryConnection_prodCode_secondaryConnection_unitName_unitNumber_variant', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actEthernetSec', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cmSyncCheck', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cmSyncCheckPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('configDataRevisionNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('passUnitList_comment_name_serNum', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('passUnitList_comment_name_prodCode_serNum_version', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('passUnitList_comment_name_prodCode_serNum', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('passUnitList_comment_name_prodCode_version', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('passUnitList_name_prodCode_serNum_version', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('passUnitList_name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('passUnitList_comment_name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('passUnitList_comment_name_prodCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('passUnitList_name_prodCode_serNum', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('MTRACE',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eutranTraceIdMcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eutranTraceIdMnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trcRecSessionRef', sa.Text, autoincrement=False, nullable=True),
        sa.Column('cellId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellMaxActiveUEsTraced', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellTrcMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cellTaTracing', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tceCellTracePortNum', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tceIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceRrcMsgCategory', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceRrcNonUeSpecMsgList', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceRrcSetting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceRrcUeSpecMsgList', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceS1MsgCategory', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceS1NonUeSpecMsgList', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceS1Setting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceS1UeSpecMsgList', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceX2MsgCategory', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceX2NonUeSpecMsgList', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceX2Setting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('traceX2UeSpecMsgList', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('NSE',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('localUdpPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nseType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('psei', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('NSVL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dataWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipAddressValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ipAddressVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('localUdpPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nsEntityId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nsVirtualConnectionName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('preconfSgsnIpEpInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('psei', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('signWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('udpPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('OAMPRF',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('activeMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('alarmClearanceDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('efEventThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('efEventWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('efpEventThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('efpEventWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('efssEventThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('efssEventWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eventRepetition', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eventSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('linkOAMProfileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('loopBackTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('loopbackSupported', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('testFrameRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('testFrameSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('OSPFV2',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('confPref', sa.Text, autoincrement=False, nullable=True),
        sa.Column('ospfEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ospfRouterId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('refBandwidth', sa.Text, autoincrement=False, nullable=True),
        sa.Column('spfDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('spfHoldTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('spfMaxHoldTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('PCM',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('PCU',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('abisInType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bcsuID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gbIfType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuAbisConnectionType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcuObjectState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('piuType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('psei', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('PISCHDLITEM',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ActionMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NEList_BaseId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PIObjects', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PlanName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('StartDate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('StopDate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('periods_day_duration_hour_interval_minute', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('scheduleIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('PMCADM',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('reportingIntervalPm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('PMRNL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtCellAvailability', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtCellLoad', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtCellRes', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtCellThruput', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtEPSBearer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtInterSysHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtInterSysHoEhrpdBc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtInterSysHoGsmNb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtInterSysHoUtranNb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtIntereNBHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtIntraeNBHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtLTEHo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtPowQualDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtPowQualUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtQoS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtRRC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtRadBearer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtS1AP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtTranspLoad', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtUEandServiceDiff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtUEstate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtX2AP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mteNBload', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('mtintraLTEHoNb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('PMSCHDLS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('PMTNL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_ETHIF_Stats_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_Ethernet_Link_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_IPSec_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_IP_Filtering_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_IP_Stats_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_PHB_Stats_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_TAC_Statistics_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_TOP_FreqSync_Stats_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_TOP_PhaseSync_Stats_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_TWAMP_Stats_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_VLAN_IP_Stats_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_VLAN_PHB_Stats_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lte_VLAN_Stats_Interval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('POC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('alpha', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bepPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bsTxPwrMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bsTxPwrMax1x00', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bsTxPwrMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableAla', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gamma', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxPwrCompensation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minIntBetweenAla', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcALDlWeighting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcALDlWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcALUlWeighting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcALUlWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcAQLDlWeighting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcAQLDlWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcAQLUlWeighting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcAQLUlWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcControlEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcControlInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcIncrStepSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTLevDlNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTLevDlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTLevUlNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTLevUlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTQual144Nx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTQual144Px', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTQual144RxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTQualDlNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTQualDlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTQualDlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTQualUlNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTQualUlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLTQualUlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLowerThresholdsLevDLRxLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcLowerThresholsLevULRxLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcRedStepSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcUTLevDlNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcUTLevDlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcUTLevUlNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcUTLevUlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcUTQualDlNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcUTQualDlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcUTQualDlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcUTQualUlNx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcUTQualUlPx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcUTQualUlRxQual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcUpperThresholdsLevDLRxLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcUpperThresholdsLevULRxLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('powerDecrQualFactor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('powerLimitAla', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pwrDecrLimitBand0', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pwrDecrLimitBand1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pwrDecrLimitBand2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tAvgT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tAvgW', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('PPTT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdhLbo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pdhLineType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('PWNE',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bfdTimer_bfdDetectMult_desiredMinTxIntvl_requiredMinRxIntvl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cwEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('QOS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('perHopBehaviourWeightList_assuredForwardingClass1_assuredForwardingClass2_assuredForwardingClass3_assuredForwardingClass4_bestEffort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trafficTypesMap_dscpList_pHB_trafficType_vlanPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trafficTypesMap_pHB_trafficType_vlanPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dscpMap_dscp_pHB_vlanPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enablePhbCounters', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('assuredForwardingClass1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('assuredForwardingClass2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('assuredForwardingClass3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('assuredForwardingClass4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bestEffort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sseDscpOverwrite', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trafficTypesMap_dscp_trafficType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('RA',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('nseiList', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('routingAreaIdLac', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('routingAreaIdMcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('routingAreaIdMnc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('routingAreaIdRac', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('REDRT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('addGsmSIToRedirMsg', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('csFallBPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('emerCallPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('redirFreqUtra', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('redirRat', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('redirectPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('RMOD',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('climateControlProfiling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('connectionList_linkId_positionInChain_sModId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('moduleLocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prodCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('radioSiteId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('serNum', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('linkSpeed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('RNAC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLoadTxPower', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRNumofReconf', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRwinSizeSCload', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjustmentPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdjustmentRatio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('BitRateSetPSNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHSlopeOfTheCurve', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLInLoopPCStepSizeCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLLoadSource', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLmaxBitRateSF128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLmaxBitRateSF16', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLmaxBitRateSF256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLmaxBitRateSF32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLmaxBitRateSF64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLpuncturingLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DownlinkInnerLoopPCStepSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DynHSUPABLERAlgTrgTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DynHSUPABLERBurstDataRx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DynHSUPABLERContDataRx10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DynHSUPABLERContDataRx2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DynHSUPABLERFrameWinSiz', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DynHSUPABLERMaxRateThrB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DynHSUPABLERMaxRateThrC10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DynHSUPABLERMaxRateThrC2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DynHSUPABLERPeakRateRx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DynHSUPABLERThrBurstyTP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DynHSUPABurstyPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHSlopeOfTheCurve', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EmeCallLevelValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EmeCallPCIValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EmeCallPVIValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ExpectReorderingPDCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FOLPCSIRTgtModInt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FOLPCStepSizSIRTgt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FmaxPeriodPDCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FmaxTimePDCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FreePtxSafetyMarginStr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrachBetaC120', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrachBetaC15', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrachBetaC30', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrachBetaC60', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrachBetaD120', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrachBetaD15', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrachBetaD30', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrachBetaD60', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HeaderCompressionMethod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('L1BurstDataBLERTrgtEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('L1ContBLERTrgtEDCH10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('L1ContBLERTrgtEDCH2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('L1PeakRateBLERTrgtEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LoadBasedAMRCodecMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxAdjustmentStep', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxFreezingTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxHeaderPDCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNumberOfReAttemptsCong', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MinPrefChange', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NonTCPspacePDCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PCPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PCrangeDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PagingRestrictionInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PeriodULRCAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrefSubtract', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RAU_LAU_RestrictionInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNACChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNARDSACCell_DCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNARDSACCell_PCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNARDSACGuardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRCConnSetupMsgSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SRBDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SignallingLinkInactivityTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('StepSizeForDCHBLER', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('StepSizeForEDCHBLER', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TCPspacePDCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TDMultForHSDPAStreaming', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TFDCHZeroBitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULFastOLPCDTXthld', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULmaxBitRateSF128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULmaxBitRateSF16', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULmaxBitRateSF256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULmaxBitRateSF32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULmaxBitRateSF64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULmaxBitRateSF8', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULpuncturingLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UlScrCodeMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UpLinkInitialTransmitPowerMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UpLinkRecoveryPeriodPowerMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('RNC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ActivePRNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AlarmSetforWCELBLINIT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CBCSourceIPAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CSAttachDetachAllowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CommonMCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CommonMNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CommonMNCLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ConnectionRetryCounter', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLBLERConfInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ExtendedULDLactivationTmr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MACLogChPriSRB1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MACLogChPriSRB2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MACLogChPriSRB3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxAMRCapacityErl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxCarrierConnectivity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxIubPSThroughputMbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N302', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N304', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N308', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('OMSBackupIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('OMSIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMDuration', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMExceededTrafficDur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PageRep1stInterv', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PageRep2ndInterv', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RANAPprocInitWait', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNCChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNCIPAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNCName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTservicesForPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RestrictionInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RncClientTLSMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RncOptions', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB11_priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB15_priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB18_priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB19Priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB1_priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB2_priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB3_priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB5_priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SecOMSIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ServingOMS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ServingOMSAdminSetting', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T302', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T304', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T305', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T307', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T308', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T309', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T314', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T316', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T317', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWE_NRT_DCH_tti10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWE_NRT_DCH_tti20', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWE_NRT_DCH_tti40', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWE_RT_DCH_tti10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWE_RT_DCH_tti20', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWE_RT_DCH_tti40', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWE_Speech', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWS_NRT_DCH_tti10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWS_NRT_DCH_tti20', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWS_NRT_DCH_tti40', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWS_RT_DCH_tti10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWS_RT_DCH_tti20', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWS_RT_DCH_tti40', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWS_Speech', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULBLERConfInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UL_DLcapacityReqWait', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WCELIdleAlarmTimeout', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('RNFC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRCodecSetEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRWithEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRWithHSDSCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AutomDLPlanUpdEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('BTSLoadIndSel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CCCHforCUCallowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CMmasterSwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CSCallSetUpFACHPCHImpr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CSFBEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CUCforPCHtoDCHallowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CVUserInactInSignConnRel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCH00SuppOnIurEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHBitRateBalancing', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHScheOverIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHtoPCHEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLOptimisationUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DynUsageHSDPAReturnChannel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EUTRAdetection', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FRLCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FastDormancyEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FastPCHSwitchEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FasterOLPCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FemtoHandoverControl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FlexULRLCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FlexUpgrUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HLSModeSelection', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPA16KBPSReturnChannel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPA48UsersEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPADynamicResourceAllocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAMobility', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPAInterRNCMobility', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPAOverIurExt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSUPADynBLEREnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IFHOOverIurEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IFHOOverIurExt', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ISHOCancellation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ISHOInIurMobility', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IuPSrelWait3G2GMultiServ', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LFDProfEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MIBPLMNIdIncluded', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOCNenabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MRABRelocVendSpCorr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PBSpolicy', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PPACEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PSOpThroUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMDriftAllowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PostVerifPeriodDLSynch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PowerBalancing', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RABDRAEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RABFailDueUESTCorr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNFCChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRCSetupCCHEnabledR99', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIBCapabilityCheck', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOCmAllowedNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SRVCCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SignConnActivitySupervision', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SubscriberTrace', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WBAMRCodecSetEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('RNHSPA',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WeightForARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WeightForARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WeightForARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ATOSRBsOnHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msCPCOptObjective', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msCQIDTXTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msCQIFeedbackCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msInacThrUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msInacThrUEDTXCycl2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msMACDTXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msMACInacThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msUEDPCCHburst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msUEDPCCHburst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msUEDTXCycle1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msUEDTXCycle2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N10msUEDTXLongPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msCPCOptObjective', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msCQIDTXTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msCQIFeedbackCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msInacThrUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msInacThrUEDTXCycl2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msMACDTXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msMACInacThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msUEDPCCHburst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msUEDPCCHburst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msUEDTXCycle1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msUEDTXCycle2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N2msUEDTXLongPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msCPCOptObjective', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msCQIDTXTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msCQIFeedbackCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msInacThrUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msInacThrUEDTXCycl2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msMACDTXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msMACInacThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msUEDPCCHburst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msUEDPCCHburst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msUEDTXCycle1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msUEDTXCycle2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S10msUEDTXLongPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msCPCOptObjective', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msCQIDTXTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msCQIFeedbackCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msInacThrUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msInacThrUEDTXCycl2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msMACDTXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msMACInacThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msUEDPCCHburst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msUEDPCCHburst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msUEDTXCycle1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msUEDTXCycle2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('S2msUEDTXLongPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msCPCOptObjective', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msCQIDTXTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msCQIFeedbackCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msInacThrUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msInacThrUEDTXCycl2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msMACDTXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msMACInacThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msUEDPCCHburst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msUEDPCCHburst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msUEDTXCycle1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msUEDTXCycle2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V10msUEDTXLongPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msCPCOptObjective', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msCQIDTXTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msCQIFeedbackCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msInacThrUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msInacThrUEDTXCycl2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msMACDTXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msMACInacThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msUEDPCCHburst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msUEDPCCHburst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msUEDTXCycle1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msUEDTXCycle2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('V2msUEDTXLongPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CPICHECNOSRBHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CPICHECNOThreEDCH2MS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CPICHRSCPThreEDCH2MS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CPICHRSCPThreSRBHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCellVsMIMOPreference', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DiscardTimerHSCSVoice', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHCTSwitchGuardTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHMACdflowtputStrTtT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHMaxHARQReTxStr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHMaxHarqReTxSRB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHMaxHarqReTxSRB2MS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHMaxNumberOfHARQReTx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHQOSClasses', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EnablDelayHHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EnablDelayStand', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FDPCHAllocMinInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FDPCHAndSRBOnHSPATC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FDPCHSetupEC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FactorEDCHMaxBRPSstream', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FactorEDCHMaxBitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FactorEDCHMaxBitRate2NRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FactorEDCHMaxBitRate3NRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPACPICHCTSRepPer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPACPICHEcNoThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPACellChangeRepetitionTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAChaTypeSwitchWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAMaxCellChangeRepetition', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAPeakRateLimitRABMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPARRCdiversity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPASRBWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHCTSwitchGuardTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHGuardTimerLowThroughput', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHQoSclasses', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri0DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri0UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri10DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri10UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri11DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri11UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri12DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri12UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri1DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri1UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri2DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri2UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri3DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri3UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri4DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri4UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri5DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri5UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri6DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri6UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri7DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri7UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri8DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri8UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri9DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NBRForPri9UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPDSCHAdjustPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HappyBitDelayConditionEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HsdschGuardTimerHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InacUserNbrXXXOverNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InacUsersOverloadFact', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MACdflowthroughputRelThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MACdflowthroughputTimetoTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MACdflowtputStrTtT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MACdflowutilStrTtT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MEHCQIFeedbackCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MEHHSUPAUserIncr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxBitRateNRTMACDFlow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxCSDelayRNCETTI10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxCSDelayRNCETTI2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxCSDelayUE', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxEHARQReTxCSAMR10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxEHARQReTxCSAMR2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxReWaitTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxReWaitTime2msTTI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxReWaitTimeRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxSetOfEDPDCHCSAMR10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxSetOfEDPDCHCSAMR2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NRTRBBRWithEDCHStr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PeriodicityForSI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PowerOffsetEHARQVoice', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PowerOffsetForSI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNHSPAChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SmartHSPATimeToTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SmartHSPATputAveWin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T1HSCSVoice', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TGPLAMRHSDPAInterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TGPLHSDPAInterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ThresholdMaxEDPDCHSR1920kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ThresholdMaxEDPDCHSR3840kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ThresholdMaxEDPDCHSR960kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UPResAllocInCellDCHWait', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCPHSDPAPrevDuration', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCPHSDPAUserIncr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WeightDCHBG', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WeightDCHTHP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WeightDCHTHP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WeightDCHTHP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WeightHSPABG', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WeightHSPATHP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WeightHSPATHP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WeightHSPATHP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('RNMOBI',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AnchorFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AnchorFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AnchorHopiIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AnchorHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CellReselectionObservingTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DRRCForHSDPALayerServices', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DirectedRRCForHSDPALayerEnhanc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DisablePowerInHSDPALayeringDecision', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EcnoDifferenceThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EnableULQualDetRep', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FastDormOverCpcPri', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FastUECancel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FastUEPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FastUEThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GANetwARFCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GANetwBCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GANetwNCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GapPositionSingleFrame', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmHandoverAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmHandoverCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmHandoverNrtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('GsmHandoverRtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSCAHORabCombSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPACPICHAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPACPICHReportPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPACellChangeMinInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPALayerLoadShareThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPASIRErrorAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPASIRErrorFilterCoefficient', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPASIRErrorReportPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPASIRErrorServCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPASIRErrorTargetCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAServCellWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPADRNCEcNoOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPADRNCSIRErrorOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IBTSRabCombSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOMinNrtDchAllocTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LowerRxTxTimeDiff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MBLBGuardTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxCellReselections', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNumISHOClPerAS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MultipleBSICIdent', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NCHOFilterCoeffComLoadMeasDRNCCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NCHOHystComLoadMeasDRNCCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NCHOThrComLoadMeasDRNCCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PreferBandForLayering', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RANAPCause1LoadHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RANAPCause2LoadHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RANAPCause3LoadHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RANAPCause1ServHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RANAPCause2ServHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RANAPCause3ServHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNMOBIChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOHandlingOfCellLoadMeasNotAct', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOProfileBackgroundPSNRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOProfileConvCSSpeech', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOProfileConvCSTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOProfileConvPSRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOProfileConvPSSpeech', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOProfileInteractivePSNRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOProfileStreamCSNTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOProfileStreamPSRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOUseBackgroundPSNRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOUseConvCSSpeech', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOUseConvCSTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOUseConvPSRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOUseConvPSSpeech', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOUseInteractivePSNRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOUseStreamCSNTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SLHOUseStreamPSRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ServBtwnHSDPALayers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ServicesToHSDPALayer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SmartLTELayeringPrevT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SmartLTELayeringServ', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TGPLdoubleframeNRTPSgsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TGPLdoubleframeNRTPSinterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TGPLsingleframeAMRgsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TGPLsingleframeAMRinterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TGPLsingleframeCSgsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TGPLsingleframeCSinterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TGPLsingleframeNRTPSgsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TGPLsingleframeNRTPSinterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TGPLsingleframeRTPSgsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TGPLsingleframeRTPSinterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TRelocOverall', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TRelocPrep', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UEQualityRepInterv', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UETxPowerMaxRef', sa.Text, autoincrement=False, nullable=True),
        sa.Column('ULQualDetRepThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UpperRxTxTimeDiff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('RNPS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ActivationTimeOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CellDCHtestTmr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CrQueuingTimeDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CrQueuingTimeUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilBelowDowngradeThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilHighAveWin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilHighBelowNRTDataRateThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilHighTimeToTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerAveWin128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerAveWin256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerAveWin32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerAveWin384', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerAveWin64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerDowngradeThr128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerDowngradeThr256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerDowngradeThr32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerDowngradeThr384', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerDowngradeThr64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerTimeToTrigger128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerTimeToTrigger256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerTimeToTrigger32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerTimeToTrigger384', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilLowerTimeToTrigger64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilMeasGuardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperAveWin128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperAveWin256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperAveWin32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperAveWin384', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperAveWin64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperDowngradeThr128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperDowngradeThr256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperDowngradeThr32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperDowngradeThr384', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperDowngradeThr64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperTimeToTrigger128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperTimeToTrigger256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperTimeToTrigger32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperTimeToTrigger384', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilUpperTimeToTrigger64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLOptimisationProhibitTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLOptimisationPwrOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FactorMinPBSinterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactDetForStreamingRB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IurPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MEHTVMPendingTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForBackARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForBackARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForBackARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForConvOnHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForIntSignaling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForIntTHP1ARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForIntTHP1ARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForIntTHP1ARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForIntTHP2ARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForIntTHP2ARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForIntTHP2ARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForIntTHP3ARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForIntTHP3ARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForIntTHP3ARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForSRBsOnHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForStreamARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForStreamARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriForStreamARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNPSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTOverNRTPriThresholdARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTOverNRTPriThresholdARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTOverNRTPriThresholdARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SmartInactTimerFACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SmartInactivityTimerDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToCellFACHinTest', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdDLHigh', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdDLHighDCH128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdDLHighDCH16', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdDLHighDCH256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdDLHighDCH32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdDLHighDCH64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdDLHighDCH8', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdULHigh', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdULHighDCH128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdULHighDCH16', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdULHighDCH256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdULHighDCH32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdULHighDCH64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdULHighDCH8', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolTimeToTriggerDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolTimeToTriggerUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULLoadStateTTT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('RNRLC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCBufMaxOverbook2NRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCBufMaxOverbook3NRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE100', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE1150', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE1250', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE150', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE1500', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE1800', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE1k', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE200', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE2300', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE2550', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE300', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE50', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE500', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCMaximumBufferUE750', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCmaximumBufferUE400', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfNRTPSCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfNRTPSFilterReTX', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfNRTPSMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfNRTPSMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfNRTPSMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfNRTPSPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfNRTPSPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfNRTPSPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfNRTPSPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfNRTPSPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfNRTPSTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB136MaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB136PeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB136PeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB136PollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB136PollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB136PollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB136Triggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB34MaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB34PeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB34PeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB34PollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB34PollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB34PollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfSRB34Triggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfStreamCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfStreamDiscardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfStreamFilterReTX', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfStreamMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfStreamMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfStreamMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfStreamPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfStreamPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfStreamPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfStreamPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfStreamPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnDCHOfStreamTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnEDCHOfNRTPSCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnEDCHOfNRTPSMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnEDCHOfNRTPSMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnEDCHOfNRTPSMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnEDCHOfNRTPSPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnEDCHOfNRTPSPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnEDCHOfNRTPSPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnEDCHOfNRTPSPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnEDCHOfNRTPSPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnEDCHOfNRTPSTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHStrPSCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHStrPSDiscardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHStrPSMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHStrPSMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHStrPSMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHStrPSPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHStrPSPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHStrPSPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHStrPSPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHStrPSPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHStrPSTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfPSMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfPSMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfPSMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfPSPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfPSPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfPSPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfPSPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfPSPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfPSTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfSRBMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfSRBPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfSRBPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfSRBPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfSRBPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfSRBPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnFACHOfSRBTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnHSDSCHOfNRTPSCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnHSDSCHOfNRTPSFilterReTX', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnHSDSCHOfNRTPSMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnHSDSCHOfNRTPSMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnHSDSCHOfNRTPSMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnHSDSCHOfNRTPSPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnHSDSCHOfNRTPSPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnHSDSCHOfNRTPSPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnHSDSCHOfNRTPSPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnHSDSCHOfNRTPSPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCOnHSDSCHOfNRTPSTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHStrDiscardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHStrPSCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHStrPSFilterReTX', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHStrPSMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHStrPSMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHStrPSMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHStrPSPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHStrPSPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHStrPSPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHStrPSPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHStrPSPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHStrPSTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate1Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate2Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate3Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate4Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate5', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate5Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate6', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate6Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate7', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate7Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate8', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRelatTXWindowRate8Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRespTimeDCH10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRespTimeDCH20', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRespTimeDCH40', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRespTimeDCHRevHSDSCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRespTimeRevEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRespTimeEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRespTimeFACHAndRACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRespTimeHSDSCHRevDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRespTimeHSDSCHRevEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCSRB3n4PeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCSRB3n4RespTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCRespTimeSRBHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCSRBHSPAMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCSRBHSPAPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCSRBHSPAPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCSRBHSPAPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCSRBHSPAPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCSRBHSPAPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCSRBHSPATriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCTXWindowSizeSRB2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCTXWindowSizeSRB3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRLCTXWindowSizeSRB4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PDUSizeBitRateThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PDUSizeCodeThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PDUSizeSIRThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RLCConfOptionFPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNRLCChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SDUdiscardModeRTPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UMRLCEVoiceDiscardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('RNTRM',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('A2EA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af122AMRDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af122AMRUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af59AMRDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af59AMRUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af144CSStreDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af144CSStreUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af576CSStreDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af576CSStreUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af64CSConDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af64CSConUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af128And136DCCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af128And136DCCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af16And17DCCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af16And17DCCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af32And34DCCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af32And34DCCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfFACHCCDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfFACHCIDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfFACHContUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfFACHSDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfFACHUDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfRACH208UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfRACHContDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfRTHSUPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfSRBOnHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfSRBOnHSUPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af128NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af128NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af16NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af16NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af256NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af256NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af32NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af32NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af384NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af384NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af64NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af64NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af8NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af8NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfPCHContUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AfPCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af128RTPSAMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af128RTPSAMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af128RTPSUMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af128RTPSUMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af16RTPSAMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af16RTPSAMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af16RTPSUMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af16RTPSUMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af256RTPSAMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af256RTPSUMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af32RTPSAMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af32RTPSAMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af32RTPSUMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af32RTPSUMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af64RTPSAMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af64RTPSAMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af64RTPSUMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af64RTPSUMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af8RTPSAMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af8RTPSAMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af8RTPSUMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Af8RTPSUMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DSCPBTSOMToBTS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DSCPBTSOMToOMS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DSCPForGTPSignalling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EchoRequestSending', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAFlowControlLowThresholdDedicatedVCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAFlowControlLowThresholdSharedVCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAFlowControlTargetDelayDedicatedVCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAFlowControlTargetDelaySharedVCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPStackErrorTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IuDATree', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IubDATree', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IurDATree', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N3Requests', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNTRMChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RespSyncCounterIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RespSyncModEnableIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RespSyncTimerIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T3Response', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('THP1DelaySensitivitySwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('THP2DelaySensitivitySwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('THP3DelaySensitivitySwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWEOffsetForOverbook', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWSOffsetForOverbook', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULCACSwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UsedSRBALCSet', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('RSTP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actRstp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bridgeForwardDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bridgeHelloTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bridgeIdentifierPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bridgeMaxAge', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('forcedProtocolVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('transmitHoldCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('SBR4',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('srcIPAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('subnet', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('SCTP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('assocMaxRetrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('maxTimeSctpSetup', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pathMaxRetrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rtoMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rtoMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sctpHeartbeatInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('SMLC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('SMOD',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('climateControlProfiling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('extAlList_cancelDelay_descr_id_inUse_polarity_severity_startDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('moduleLocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('prodCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('serNum', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('syncMaster', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('technology', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('SPTT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('SRT4',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dstIPAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('subnet', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('SRTT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('STPG',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ssmSelExt2M', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ssmSelPDH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ssmSelSyncE', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ssmType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('synchERegenOn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('synchroSourceList_clockProtocol_interfaceNumber_priority_ssmAcceptanceLevel_ssmEnabled_ssmTimeout_unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('synchroSourceList_clockProtocol_priority_ssmEnabled_ssmTimeout_unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('STPORT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('disableStpParticipation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('portNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('portPathCost', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('portPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('SUBMODULE',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('identificationCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('serialNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('vendorName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('SUBRACK',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dateOfLastService', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('identificationCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interchangeability', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('locationName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('serialNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('subrackType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('SVTT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('SYNC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TAC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TCSM',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cardConfiguration_cardName_cardNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('pcmConfiguration_pcmNumber_pcmType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tcsmType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TCTT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('connectivityPtr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('operationalState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TID',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ioTextValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TMPAR',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('cacCommittedBitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dcnCommittedBitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('externalNATIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('farEndSctpSubnetIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('farEndSctpSubnetMask', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minSCTPPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minUDPPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('signallingCommittedBitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TOPB',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TOPF',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('acceptedClockQuality', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actTopFreqSynch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('announceRequestMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ieeeTelecomProfile', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('logMeanSyncValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('topDomainNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('masterIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TOPP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('acceptedClockQuality', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('actTopPhaseSynch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('logMeanSyncValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('phaseErrorComp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('topComMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('topDomainNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('topEthMulticastAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('masterIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TRDE',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('conformanceDefinition', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('minDesiredCellRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('peakCellRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ubrShare', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('userLabel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egressCDVTolerancePCRCLP0plus1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egressPeakCellRateCLP0plus1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('serviceCategory', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ingressCDVTolerancePCRCLP0plus1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ingressPeakCellRateCLP0plus1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egressMDCR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egressUBRShare', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ingressMDCR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ingressUBRShare', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TRE',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('q1Address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TRX',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('address', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('adminState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('bbUnitSupportsEdge', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel0AdminState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel0Maio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel0Pcm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel0Subslot', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel0Tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel0Type', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel1AdminState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel1Maio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel1Pcm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel1Subslot', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel1Tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel1Type', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel2AdminState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel2Maio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel2Pcm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel2Subslot', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel2Tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel2Type', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel3AdminState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel3Maio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel3Pcm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel3Subslot', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel3Tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel3Type', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel4AdminState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel4Maio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel4Pcm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel4Subslot', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel4Tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel4Type', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel5AdminState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel5Maio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel5Pcm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel5Subslot', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel5Tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel5Type', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel6AdminState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel6Maio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel6Pcm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel6Subslot', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel6Tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel6Type', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel7AdminState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel7Maio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel7Pcm', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel7Subslot', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel7Tsl', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('channel7Type', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('daPool_ID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('eTrxInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('gprsEnabledTrx', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('halfRateSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('initialFrequency', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lapdLinkName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('lapdLinkNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('optimumRxLevDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('optimumRxLevUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('preferredBcchMark', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('subslotsForSignalling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trxAbilities', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tsc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('metroTrxType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('notificationOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('numberOfTrxRfPowerLevels', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trxOscCapability', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trxRfPower', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TWAMP',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('destIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('destPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('messageSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('plrAlarmThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('rttAlarmThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('sourceIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('TWAMPR',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('UFFIM',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('tResUtra', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('utrResTiFHM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('utrResTiFMM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('utrFddCarFrqL_dlCarFrqUtra_pMaxUtra_qQualMinUtra_qRxLevMinUtra_uCelResPrio_utraFrqThrH_utraFrqThrL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('UNI',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('underlyingTTPPtr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('UNIT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitTypeActual', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitTypeExpected', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('identificationCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interchangeability', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('numberOfSlotsOccupied', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('operationalState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('position', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('serialNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableRP301Interface', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('VBTS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ControllerIdPair_IHSPAadapterId_ServingRNCId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DediMeasRepPeriodCSdata', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DediMeasRepPeriodPSdata', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DedicatedMeasReportPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HARQRVConfiguration', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MeasFiltCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NodeBRABReconfigSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VBTSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('VCCT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trafficDescriptorId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('egressFrameDiscardEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ingressFrameDiscardEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('operationalState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('segmentEndPoint', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trafficDescriptorPtr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('VCEL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CSAMRModeSET', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CSAMRModeSETWB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DirectSCCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHMinimumSetETFCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoSetIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FastActOfTargetServCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FastCompletionOfSCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoMaxAllowedBitrateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoMaxAllowedBitrateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAenabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPASCCSpecificATO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPwrOffsetUpdateDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSUPAEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InitialBitRateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InitialBitRateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxBitRateDLPSNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxBitRateULPSNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxTotalUplinkSymbolRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MinAllowedBitRateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MinAllowedBitRateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NrtFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NrtFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NrtFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NrtHopgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NrtHopiIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NrtHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PowerOffsetUpdMsgSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxOffsetHSSCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTWithHSDPAFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTWithHSPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTwithHSDPAFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTwithHSDPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTwithHSDPAHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RelocComm_in_InterRNC_HHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtHopgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtHopiIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RxDivIndicator', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SRBDCHFmcsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SRBHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCELChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WACSetIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('VCTT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('aalProfilePtr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('enableChannelUtlStatistics', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('VPCT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trafficDescriptorId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('operationalState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('segmentEndPoint', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('trafficDescriptorPtr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('VPTT',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('connectivityPtr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('WAC',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilRelAveWin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilRelThrDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilRelThrUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCHUtilRelTimeToTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHMACdFlowThroughputAveWin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHMACdFlowThroughputRelThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHMACdFlowThroughputTimetoTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAInitialBRULStrNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAMaxBitrateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAMinBRULStrNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAinitialBitrateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAminAllowedBitrateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactCPCBatOptT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactCPCNoBatOptT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactNonCPCBatOptT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactNonCPCNoBatOptT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerDownlinkDCH128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerDownlinkDCH16', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerDownlinkDCH256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerDownlinkDCH32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerDownlinkDCH320', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerDownlinkDCH384', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerDownlinkDCH64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerDownlinkDCH8', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerUplinkDCH128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerUplinkDCH16', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerUplinkDCH256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerUplinkDCH32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerUplinkDCH320', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerUplinkDCH384', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerUplinkDCH64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactivityTimerUplinkDCH8', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MACdflowthroughputAveWin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MACdflowutilRelThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MACdflowutilTimetoTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MSActivitySupervision', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxNoiseMaxTuneAbsolute', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolPendingTimeDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolPendingTimeUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdULLow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UL_DL_activation_timer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WACChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WaitTimeRRCbackground', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WaitTimeRRCconversational', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WaitTimeRRCemergency', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WaitTimeRRChighPrioritySignalling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WaitTimeRRCinterRATreselection', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WaitTimeRRCinteractive', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WaitTimeRRClowPrioritySignalling', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WaitTimeRRCother', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WaitTimeRRCregistration', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WaitTimeRRCstreaming', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WaitTimeRRCsubscribed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WaitTimeRRCunknown', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('WBTS',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ATMInterfaceID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('BTSAdditionalInfo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('BTSIPAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('BTSSupportForHSPACM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('BlindHOIntraBTSQCheck', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('COCOId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCNLinkStatus', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCNSecurityStatus', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLORLAveragingWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DSCPHigh', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DSCPLow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DSCPMedDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DSCPMedHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DediMeasRepPeriodCSdata', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DediMeasRepPeriodPSdata', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DedicatedMeasReportPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DelayThresholdMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DelayThresholdMax2msTTI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DelayThresholdMid', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DelayThresholdMid2msTTI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DelayThresholdMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DelayThresholdMin2msTTI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HARQRVConfiguration', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPA14MbpsPerUser', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPACCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAULCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSUPACCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSUPADLCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSUPAXUsersEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPBasedRouteIdIub', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPBasedRouteIdIub2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPBasedRouteIdIub3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPBasedRouteIdIub4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IPNBId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactCACThresholdATM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactCACThresholdIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InactUsersCIDThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IntelligentSDPrioHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IubTransportMedia', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IubTransportSharing', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LoadControlPeriodPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxFPDLFrameSizeIub', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNumberEDCHLCG', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MeasFiltCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MinUDPPortIub', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NESWVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NEType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NbrOfOverbookedHSDPAUsers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NodeBRABReconfigSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('OverbookingSwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PDUSize656WithHSDSCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PSAveragingWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PSRLAveragingWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMAVTrafficVERLogic', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMEnableWakeUpTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMRemCellSDBeginHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMRemCellSDBeginMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMRemCellSDEndHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMRemCellSDEndMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMShutdownBeginHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMShutdownBeginMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMShutdownEndHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMShutdownEndMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMWeekday', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ProbabilityFactorMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ProbabilityFactorMax2msTTI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxAlpha', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxMeasAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxTargetPSAdjustPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxAlpha', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxDPCHmax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxDPCHmin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxMeasAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RACHloadIndicationPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RFSharingState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRIndPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRMULDCHActivityFactorCSAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRMULDCHActivityFactorCSNTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRMULDCHActivityFactorCSTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRMULDCHActivityFactorPSBackgr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRMULDCHActivityFactorPSStream', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRMULDCHActivityFactorPSTHP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRMULDCHActivityFactorPSTHP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRMULDCHActivityFactorPSTHP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRMULDCHActivityFactorSRB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ReleaseTimerForSharedHSDPAallocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SchedulingPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SharedHSDPAVCCSelectionMethod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SharedHSDPAallocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TQMId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TQMId2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TQMId3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TQMId4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWEOffsetNRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWEOffsetRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWSOffsetNRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWSOffsetRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WBTSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WBTSName', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WBTSSWBuildId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WinACRABsetupDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WinACRABsetupUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WinLCHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WinLCHSUPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('WCEL',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WCELMCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WCELMNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ACBarredList', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AICHTraTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMROverSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMROverTransmission', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMROverTxNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMROverTxNonHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMROverTxTotal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRSF', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRTargetSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRTargetTransmission', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRTargetTxNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRTargetTxNonHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRTargetTxTotal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRUnderSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRUnderTransmission', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRUnderTxNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRUnderTxNonHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AMRUnderTxTotal', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ATOSRBsOnHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AbsPrioCellReselec', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ActivationTimeOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdminCellState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AdminPICState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AllowedPreambleSignatures', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AllowedRACHSubChannels', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AltScramblingCodeCM', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('AssignedPICPool', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('BlindHOEcNoThrTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('BlindHORSCPThrTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CCHSetupEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CIRForFDPCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CPCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CPICHEcNoSRBMapRRC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CPICHRSCPSRBMapRRC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CPICHtoRefRABoffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CSAMRModeSET', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CSAMRModeSETWB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CSGroupId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CUCEcNoThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CUCRSCPThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CableLoss', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CellAdditionalInfo', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CellBarred', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CellRange', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CellSelQualMeas', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CellWeightForHSDPALayering', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Cell_Reserved', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CodeTreeOptTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CodeTreeOptimisation', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CodeTreeOptimisationGuardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('CodeTreeUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCellAndMIMOUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCellHSDPACapaHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCellHSDPAEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DCellHSDPAFmcsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DLLoadStateTTT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DPCHOverHSPDSCHThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DPCModeChangeSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DRRCprxMargin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DRRCprxOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DRRCptxMargin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DRRCptxOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DefMeasCtrlReading', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DeltaPrxMaxDown', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DeltaPrxMaxUp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DeltaPtxMaxDown', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DeltaPtxMaxUp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DirectSCCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DirectedRRCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DirectedRRCForHSDPALayerEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHCapability', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHMinSetETFCIT0', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHMinimumSetETFCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHOpState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoSetIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FDPCHCodeChangeEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FDPCHEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FDPCHSetup', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FachLoadMarginCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FachLoadThresholdCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FastActOfTargetServCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FastCompletionOfSCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('FastHSPAMobilityEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HCS_PRIO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoMaxAllowedBitrateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HHoMaxAllowedBitrateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSCapabilityHONumbUE', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSCapabilityHOPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPA64QAMallowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPA64UsersEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPACPICHAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPACPICHReportPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPACellChangeMinInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPALayeringCommonChEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAMaxCellChangeRepetition', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPASRBWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAServCellWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAcapability', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDPAenabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSDSCHOpState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSLoadStateHSDBRLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSLoadStateHSDOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSLoadStateHSUBRLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSLoadStateHSUOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSLoadStateHSUResThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPA72UsersPerCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPACapaHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPAQoSEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPASCCSpecificATO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPDSCHCodeSet', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPDSCHMarginSF128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSPwrOffsetUpdateDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSUPA2MSTTIEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HSUPAEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('HspaMultiNrtRabSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IncomingLTEISHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InitialBitRateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InitialBitRateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterFreqScaleTresel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('InterRATScaleTresel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('IntraFreq_Cell_Reselect_Ind', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOCapaReqRejRateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOCapaReqRejRateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHODelayOFFCapaReqRejRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHODelayOFFHardBlocking', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHODelayOFFInterference', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHODelayOFFResRateSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOHardBlockingBaseLoad', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOHardBlockingRatio', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOHystTimeCapaReqRejRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOHystTimeHardBlocking', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOHystTimeInterference', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOHystTimeResRateSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHONRTTrafficBaseLoad', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHONumbUEInterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHONumbUEInterRAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOPwrOffsetDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOPwrOffsetUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOResRateSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOWinSizeOFFCapaReqRejRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOWinSizeOFFHardBlocking', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOWinSizeOFFInterference', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOWinSizeOFFResRateSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOWinSizeONCapaReqRejRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOWinSizeONHardBlocking', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOWinSizeONInterference', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LHOWinSizeONResRateSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LTECellReselection', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LoadBasedCPICHEcNoSRBHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('LoadBasedCPICHEcNoThreEDCH2MS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MBLBInactivityEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MBLBLoadInfoDistr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MBLBMobilityEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MBLBRABSetupEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MBLBRABSetupMultiRAB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MBLBStateTransEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MEHHSDPAUserNbrCQI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MEHHSUPAUserNbr2msTTI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MEHLoadStateTtT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MEHMaxHSUPAUsers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MEHQueueThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MEHULLHSDPAUALimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MHA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MIMOEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MIMOHSDPACapaHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MIMOWith64QAMUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MassEventHandler', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxBitRateDLPSNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxBitRateULPSNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxCodeReleases', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxDLPowerCapability', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxIncrInterferenceUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNbrOfHSSCCHCodes', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNumbHSDPAUsersS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNumbHSDSCHMACdFS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNumberEDCHCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNumberHSDPAUsers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNumberHSDSCHMACdFlows', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNumberUECmHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNumberUECmSLHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNumberUEHSPACmHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxNumberUEHSPACmNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MaxTotalUplinkSymbolRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MinAllowedBitRateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MinAllowedBitRateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MultiplePLMNListIncluded', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N300', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N312', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N312Conn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N313', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('N315', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NASsignVolThrDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NASsignVolThrUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NCr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NbrOfSCCPCHs', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NonHCSNcr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NonHCSTcrMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NonHCSTcrMaxHyst', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NrtFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NrtFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NrtFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('NumberEDCHReservedSHOBranchAdditions', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('OCULNRTDCHGrantedMinAllocT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('OCdlNrtDCHgrantedMinAllocT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PBSgrantedMinDCHallocTequalP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PBSgrantedMinDCHallocThigherP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PBSgrantedMinDCHallocTlowerP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PCH24kbpsEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PFLIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PICState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PI_amount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PRACHDelayRange', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PRACHRequiredReceivedCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PRACHScramblingCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PRACH_preamble_retrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PSGroupId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PTxPICH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMAVLimitDCHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMAVLimitNRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMAVLimitRTDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMAVLimitRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMAVPwrNRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMAVPwrRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMCellGroup', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMEXPwrLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMEXUsrLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMSDLimitDCHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMSDLimitNRTDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMSDLimitNRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMSDLimitRTDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMSDLimitRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMSDPwrNRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMSDPwrRTDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMSDPwrRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMShutdownOrder', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PWSMShutdownRemCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PowerOffsetLastPreamblePRACHmessage', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PO1_15', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PO1_30', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PO1_60', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PowerOffsetUpdMsgSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PowerRampStepPRACHpreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PowerSaveHSPAType', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PriScrCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxLoadMarginDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxLoadMarginEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxLoadMarginMaxDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxMaxOrigTargetBTS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxMaxTargetBTS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxMeasFilterCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxNoise', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxNoiseAutotuning', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxTargetMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxTargetPSMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxTargetPSMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxTargetPSStepDown', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PrxTargetPSStepUp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxAICH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxCellMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxDLabsMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxFDPCHMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxFDPCHMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxHighHSDPAPwr', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxMarginCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxMaxEHICH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxMaxHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxMeasFilterCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxOffsetEAGCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxOffsetEAGCHDPCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxOffsetEHICHDPCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxOffsetERGCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxOffsetERGCHDPCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxOffsetExxCH2ms', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxOffsetExxCHSHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxOffsetFDPCHSHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxOffsetHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxPSstreamAbsMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxPrimaryCCPCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxPrimaryCPICH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxPrimarySCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxSCCPCH1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxSCCPCH2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxSCCPCH2SF128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxSCCPCH3', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxSecSCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxTargetHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxTargetPSAdjustPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxTargetPSMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxTargetPSMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxTargetPSStepDown', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxTargetPSStepUp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxTargetTotMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxTargetTotMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('PtxThresholdCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('QHCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Qhyst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Qhyst1FACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Qhyst1PCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Qhyst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Qhyst2FACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Qhyst2PCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('QqualMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('QrxlevMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RACHCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RACHInterFreqMesQuant', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RACHIntraFreqMesQuant', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RACH_Tx_NB01max', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RACH_Tx_NB01min', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RACH_tx_Max', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RACHmeasFilterCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RNARGroupId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRCconnRepTimer1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RRCconnRepTimer2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTWithHSDPAFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTWithHSDPAFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTWithHSDPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RTWithHSPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RachLoadMarginCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RachLoadThresholdCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RefServForCodePower', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RelocComm_in_InterRNC_HHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RsrvdSignaturesOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RtFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('RxDivIndicator', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SHCS_RAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SHCS_RATConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB11Length', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB11bisLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB12Length', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB4Indicator', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIB7factor', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHOffsetEDPCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SRBBitRateRRCSetupEC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SRBDCHFmcsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SRBHSPAFmcsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SRBMapRRCSetupEC', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SectorID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ServHONumbUEInterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ServHONumbUEInterRAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ServHOPeriodInterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ServHOPeriodInterRAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ShutdownStepAmount', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ShutdownWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Sintersearch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SintersearchConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Sintrasearch', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SintrasearchConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Slimit_SearchRAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Slimit_SearchRATConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SmartLTELayeringEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SmartLTELayeringRSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SmartLTELayeringTSysSel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SmartLTELayeringUA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SmartTrafVolThrDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SmartTrafVolThrUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SpeedScaleTresel', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Sprioritysearch1', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Sprioritysearch2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SsearchHCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SsearchHCSConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Ssearch_RAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Ssearch_RATConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T300', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T312', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T312Conn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T313', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('T315', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TBarred', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TCrmax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TCrmaxHyst', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TPCCommandERTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TargetNSEDCHToTotalEDCHPR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Tcell', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Threshservlow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Threshservlow2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWE_CCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ToAWS_CCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TrafVolThresholdDLLow', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('Treselection', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TreselectionFACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('TreselectionPCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UARFCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UEtxPowerMaxDPCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UEtxPowerMaxPRACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UEtxPowerMaxPRACHConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULLoadStateHSUBRLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('ULLoadStateHSUOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('URAId', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UTRAN_DRX_length', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UseOfHCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('UsersPerHSSCCHCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCPMaxHSDPAUsers', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VCPPtxOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VoiceCallPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('VoiceOverrideSTHSUPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WACSetIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WCELChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WCelState', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

    op.create_table('WRAB',
        sa.Column('FILENAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DATETIME', sa.DateTime, autoincrement=False, nullable=True),
        sa.Column('VERSION', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DISTNAME', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('MOID', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DeltaSIRAfterDownlink', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DeltaSIRAfterUplink', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DeltaSIRDownlink', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DeltaSIRUplink', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('DownlinkOrthog', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHBLERAdjCSVoice10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHBLERAdjCSVoice2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfPSNRTPriQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfPSNRTPrim', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfPSNRTSec', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfPSNRTSecQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfPSNRTSelQuaDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfPSNRTSelQuaUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfPSStrPriQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfPSStrPrim', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfPSStrSec', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfPSStrSecQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfPSStrSelQuaDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfPSStrSelQuaUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfSRB136', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfSRB136Qua', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfSRB34', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfSRB34Qua', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHRateGainCSAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHRateGainCSData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHRateGainPSData', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHRateGainSFDown', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHRateGainSFUp', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHRateGainSRB', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHRxDiv2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHRxDiv4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHTxDiv', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoEDCHCSAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHPSStr128Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHPSStr16Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHPSStr248Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHPSStr32Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHPSStr64Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHPSStr8Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EDCHPSStrOver248Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfCSDataNT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfCSDataNTQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfCSDataT', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfCSDataTQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfCSNBAMR122', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfCSNBAMR59', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfCSNBAMRQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfCSNBAMRb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfCSNBAMRc', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfCSWBAMR1265', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfCSWBAMRQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('EbNoDCHOfCSWBAMRb', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('L1BLERTEDCHVoice10', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('L1BLERTEDCHVoice2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCH128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCH16', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCH256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCH32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCH4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCH64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCH8', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCHHS128', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCHHS16', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCHHS256', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCHHS32', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCHHS4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCHHS64', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCHHS8', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCHMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCHMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCHOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCHRxDiv2', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('SIRDPCCHInitialDCHRxDiv4', sa.CHAR(length=250), autoincrement=False, nullable=True),
        sa.Column('WRABChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
        schema='nokia_raml20'
    )

def downgrade():
    op.drop_table('A2NE', schema='nokia_raml20')
    op.drop_table('A2ST', schema='nokia_raml20')
    op.drop_table('A2UT', schema='nokia_raml20')
    op.drop_table('ACCP', schema='nokia_raml20')
    op.drop_table('ADCE', schema='nokia_raml20')
    op.drop_table('ADJG', schema='nokia_raml20')
    op.drop_table('ADJI', schema='nokia_raml20')
    op.drop_table('ADJL', schema='nokia_raml20')
    op.drop_table('ADJS', schema='nokia_raml20')
    op.drop_table('ADJW', schema='nokia_raml20')
    op.drop_table('ADR4GW', schema='nokia_raml20')
    op.drop_table('AMGR', schema='nokia_raml20')
    op.drop_table('ANBA', schema='nokia_raml20')
    op.drop_table('ANRPRL', schema='nokia_raml20')
    op.drop_table('ANTL', schema='nokia_raml20')
    op.drop_table('BCF', schema='nokia_raml20')
    op.drop_table('BFD', schema='nokia_raml20')
    op.drop_table('BFDGRP', schema='nokia_raml20')
    op.drop_table('BSC', schema='nokia_raml20')
    op.drop_table('BTS', schema='nokia_raml20')
    op.drop_table('BTSSCL', schema='nokia_raml20')
    op.drop_table('BTSSCW', schema='nokia_raml20')
    op.drop_table('CABINET', schema='nokia_raml20')
    op.drop_table('CCFA', schema='nokia_raml20')
    op.drop_table('CERTH', schema='nokia_raml20')
    op.drop_table('CESIF', schema='nokia_raml20')
    op.drop_table('CMOB', schema='nokia_raml20')
    op.drop_table('COCO', schema='nokia_raml20')
    op.drop_table('CONNECTOR', schema='nokia_raml20')
    op.drop_table('CTRLTS', schema='nokia_raml20')
    op.drop_table('DAP', schema='nokia_raml20')
    op.drop_table('ETHLK', schema='nokia_raml20')
    op.drop_table('FMCG', schema='nokia_raml20')
    op.drop_table('FMCI', schema='nokia_raml20')
    op.drop_table('FMCS', schema='nokia_raml20')
    op.drop_table('FTM', schema='nokia_raml20')
    op.drop_table('FUUNIT', schema='nokia_raml20')
    op.drop_table('GPC', schema='nokia_raml20')
    op.drop_table('GTPU', schema='nokia_raml20')
    op.drop_table('HOC', schema='nokia_raml20')
    op.drop_table('HOPG', schema='nokia_raml20')
    op.drop_table('HOPI', schema='nokia_raml20')
    op.drop_table('HOPL', schema='nokia_raml20')
    op.drop_table('HOPS', schema='nokia_raml20')
    op.drop_table('HW', schema='nokia_raml20')
    op.drop_table('IAIF', schema='nokia_raml20')
    op.drop_table('IBFD', schema='nokia_raml20')
    op.drop_table('IBFP', schema='nokia_raml20')
    op.drop_table('IDNS', schema='nokia_raml20')
    op.drop_table('IDSP', schema='nokia_raml20')
    op.drop_table('IEIF', schema='nokia_raml20')
    op.drop_table('IFPG', schema='nokia_raml20')
    op.drop_table('IGIF', schema='nokia_raml20')
    op.drop_table('IHCP', schema='nokia_raml20')
    op.drop_table('IICP', schema='nokia_raml20')
    op.drop_table('IMAG', schema='nokia_raml20')
    op.drop_table('INTP', schema='nokia_raml20')
    op.drop_table('IPBR', schema='nokia_raml20')
    op.drop_table('IPHB', schema='nokia_raml20')
    op.drop_table('IPNB', schema='nokia_raml20')
    op.drop_table('IPNO', schema='nokia_raml20')
    op.drop_table('IPQM', schema='nokia_raml20')
    op.drop_table('IPRM', schema='nokia_raml20')
    op.drop_table('IPRO', schema='nokia_raml20')
    op.drop_table('IPRT', schema='nokia_raml20')
    op.drop_table('IPRTV6', schema='nokia_raml20')
    op.drop_table('IPSECC', schema='nokia_raml20')
    op.drop_table('IQOS', schema='nokia_raml20')
    op.drop_table('ISBFP', schema='nokia_raml20')
    op.drop_table('ITRKGRP', schema='nokia_raml20')
    op.drop_table('ITRKOBJ', schema='nokia_raml20')
    op.drop_table('IUBSNT', schema='nokia_raml20')
    op.drop_table('IUCS', schema='nokia_raml20')
    op.drop_table('IUCSIP', schema='nokia_raml20')
    op.drop_table('IUO', schema='nokia_raml20')
    op.drop_table('IUPS', schema='nokia_raml20')
    op.drop_table('IUPSIP', schema='nokia_raml20')
    op.drop_table('IUR', schema='nokia_raml20')
    op.drop_table('IVIF', schema='nokia_raml20')
    op.drop_table('L2SWI', schema='nokia_raml20')
    op.drop_table('LAPD', schema='nokia_raml20')
    op.drop_table('LCELGW', schema='nokia_raml20')
    op.drop_table('LCELL', schema='nokia_raml20')
    op.drop_table('LCELW', schema='nokia_raml20')
    op.drop_table('LNADJ', schema='nokia_raml20')
    op.drop_table('LNADJL', schema='nokia_raml20')
    op.drop_table('LNADJW', schema='nokia_raml20')
    op.drop_table('LNBTS', schema='nokia_raml20')
    op.drop_table('LNCEL', schema='nokia_raml20')
    op.drop_table('LNHOW', schema='nokia_raml20')
    op.drop_table('LNMME', schema='nokia_raml20')
    op.drop_table('LNREL', schema='nokia_raml20')
    op.drop_table('LTAC', schema='nokia_raml20')
    op.drop_table('MAL', schema='nokia_raml20')
    op.drop_table('MHA', schema='nokia_raml20')
    op.drop_table('MODULE', schema='nokia_raml20')
    op.drop_table('MRBTS', schema='nokia_raml20')
    op.drop_table('MTRACE', schema='nokia_raml20')
    op.drop_table('NSE', schema='nokia_raml20')
    op.drop_table('NSVL', schema='nokia_raml20')
    op.drop_table('OAMPRF', schema='nokia_raml20')
    op.drop_table('OSPFV2', schema='nokia_raml20')
    op.drop_table('PCM', schema='nokia_raml20')
    op.drop_table('PCU', schema='nokia_raml20')
    op.drop_table('PISCHDLITEM', schema='nokia_raml20')
    op.drop_table('PMCADM', schema='nokia_raml20')
    op.drop_table('PMRNL', schema='nokia_raml20')
    op.drop_table('PMSCHDLS', schema='nokia_raml20')
    op.drop_table('PMTNL', schema='nokia_raml20')
    op.drop_table('POC', schema='nokia_raml20')
    op.drop_table('PPTT', schema='nokia_raml20')
    op.drop_table('PWNE', schema='nokia_raml20')
    op.drop_table('QOS', schema='nokia_raml20')
    op.drop_table('RA', schema='nokia_raml20')
    op.drop_table('REDRT', schema='nokia_raml20')
    op.drop_table('RMOD', schema='nokia_raml20')
    op.drop_table('RNAC', schema='nokia_raml20')
    op.drop_table('RNC', schema='nokia_raml20')
    op.drop_table('RNFC', schema='nokia_raml20')
    op.drop_table('RNHSPA', schema='nokia_raml20')
    op.drop_table('RNMOBI', schema='nokia_raml20')
    op.drop_table('RNPS', schema='nokia_raml20')
    op.drop_table('RNRLC', schema='nokia_raml20')
    op.drop_table('RNTRM', schema='nokia_raml20')
    op.drop_table('RSTP', schema='nokia_raml20')
    op.drop_table('SBR4', schema='nokia_raml20')
    op.drop_table('SCTP', schema='nokia_raml20')
    op.drop_table('SMLC', schema='nokia_raml20')
    op.drop_table('SMOD', schema='nokia_raml20')
    op.drop_table('SPTT', schema='nokia_raml20')
    op.drop_table('SRT4', schema='nokia_raml20')
    op.drop_table('SRTT', schema='nokia_raml20')
    op.drop_table('STPG', schema='nokia_raml20')
    op.drop_table('STPORT', schema='nokia_raml20')
    op.drop_table('SUBMODULE', schema='nokia_raml20')
    op.drop_table('SUBRACK', schema='nokia_raml20')
    op.drop_table('SVTT', schema='nokia_raml20')
    op.drop_table('SYNC', schema='nokia_raml20')
    op.drop_table('TAC', schema='nokia_raml20')
    op.drop_table('TCSM', schema='nokia_raml20')
    op.drop_table('TCTT', schema='nokia_raml20')
    op.drop_table('TID', schema='nokia_raml20')
    op.drop_table('TMPAR', schema='nokia_raml20')
    op.drop_table('TOPB', schema='nokia_raml20')
    op.drop_table('TOPF', schema='nokia_raml20')
    op.drop_table('TOPP', schema='nokia_raml20')
    op.drop_table('TRDE', schema='nokia_raml20')
    op.drop_table('TRE', schema='nokia_raml20')
    op.drop_table('TRX', schema='nokia_raml20')
    op.drop_table('TWAMP', schema='nokia_raml20')
    op.drop_table('TWAMPR', schema='nokia_raml20')
    op.drop_table('UFFIM', schema='nokia_raml20')
    op.drop_table('UNI', schema='nokia_raml20')
    op.drop_table('UNIT', schema='nokia_raml20')
    op.drop_table('VBTS', schema='nokia_raml20')
    op.drop_table('VCCT', schema='nokia_raml20')
    op.drop_table('VCEL', schema='nokia_raml20')
    op.drop_table('VCTT', schema='nokia_raml20')
    op.drop_table('VPCT', schema='nokia_raml20')
    op.drop_table('VPTT', schema='nokia_raml20')
    op.drop_table('WAC', schema='nokia_raml20')
    op.drop_table('WBTS', schema='nokia_raml20')
    op.drop_table('WCEL', schema='nokia_raml20')
    op.drop_table('WRAB', schema='nokia_raml20')
