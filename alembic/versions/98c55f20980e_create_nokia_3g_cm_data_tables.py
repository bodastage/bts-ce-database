"""Create Nokia 3G CM data tables

Revision ID: 98c55f20980e
Revises: 63f20accf576
Create Date: 2018-02-11 01:21:40.431000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '98c55f20980e'
down_revision = '63f20accf576'
branch_labels = None
depends_on = None


def upgrade():
    op.create_table('a2ne',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('a2st',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2EndAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('stcAlarmEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('a2ut',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('pid', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('queue2Weight', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('queue3Weight', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('queue4Weight', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('accp',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('egressBandwidth', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ingressBandwidth', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('maxNumVCIBitsSupported', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('maxNumVPIBitsSupported', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('upcNpc', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('adjg',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgMCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgMNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TargetCellDN', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ADJGChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ADJGType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgBCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgBCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgBandIndicator', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgLAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgNCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgSIB', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgTxPwrMaxRACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgTxPwrMaxTCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NrtHopgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtHopgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('adji',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiMCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiMNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TargetCellDN', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ADJIChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiCPICHTxPwr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiComLoadMeasDRNCCellNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiEcNoOffsetNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiHandlingBlockedCellSLHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiLAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiNCHOHSPASupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiRAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiRNCid', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiSIB', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiScrCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiTxDiv', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiTxPwrDPCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiTxPwrRACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiUARFCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('BlindHOTargetCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NrtHopiIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtHopiIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('adjl',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ADJLChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjLEARFCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjLMeasBw', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjLSelectFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HopLIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('adjs',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsMCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsMNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TargetCellDN', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ADJSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsCPICHTxPwr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsDERR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsEcNoOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsLAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsRAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsRNCid', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsSIB', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsScrCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsTxDiv', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsTxPwrRACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NrtHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTWithHSDPAHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SRBHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('adr4gw',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bfdId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('preference', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('routeType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('amgr',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ldapConnectionType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('primaryLdapPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('primaryLdapServer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('anba',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('nbapType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('antl',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('alDcVoltageEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('antId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('antennaRoundTripDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('antennaTotalLoss', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cableLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('communication3gppEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('feederLoss', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('feederVoltage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('multiplexerAmount', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('multiplexerLoss', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('multiplexerTotalDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('multiplexerType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('rModId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ulDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('velocityFactor', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vswrMajorAlarm', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vswrMinorAlarm', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('additionalRxGain', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('forcedVoltage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('bfd',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bfdActivation', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bfdAdminUp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bfdDestAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bfdDetectMult', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bfdSourceIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bfdSourceUdpPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bfdType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('desMinTxInt', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('function', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('reqMinRxInt', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bfdGrp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('bfdgrp',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('btsscw',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('a20WLicencesInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('actDistributedSite15', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('actRfChaining', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('antLineSupervisionEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('antRxLevelMonitoringEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('antTiltSupportEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('btsConfiguration', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('btsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('btsName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cqiDefaultHsCellFach', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ext2M048ClkInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('extendedBtsSiteCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('fdeEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('gpsCtrlBlockForCoLocatedBts', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('gpsInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('happyBitPingFiltUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('happyBitUphThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('hsdpa16QAMSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('hsdpaBbResAllocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('hsdpaFairPacketSched', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('hsdpaSchedList_hsdpaThroughputStep_mod_sched', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('intShutdownInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('iubClkInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('maxIubDelayThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('midIubDelayThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('minIubDelayThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('numberOfBlindRepetitionHsCellFach', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('numberOfHSDPASet1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('numberOfHSDPASet2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('numberOfHSDPASet3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('numberOfHSUPASet1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('numberOfR99ChannelElements', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('qosSchedList_ccPolicy_id_weight', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('reservationPercentage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('rncType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sharedHsdpaSheduler', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('singleCellInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('actEthernetSec', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('assocMaxRetrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ext2M048ClkOutOn', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('mainsPowerAlarmId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('numOfLines', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('pathMaxRetrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('syncPropagationEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('aldSwDownloadEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('cabinet',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cabinetType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('locationName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ccfa',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('enableBundleUtlStatistics', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ubrPlusEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vccBundleEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('certh',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('btsCertificateUpdateTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('caCertificateUpdateTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cmpServerIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cmpServerPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('crServerIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('crServerPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('crlUpdatePeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('cesif',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cesMinUDPPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('cmob',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ACBarredListSystem', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CMOBChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CellAccessRestriction', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RestrictionGroupName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RestrictionGroupType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafficRestriction', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('coco',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2LossRatio', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2Multiplexing', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2MuxDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2QueueHSDPAWithFC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2QueueHSDPAWithoutFC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2QueueHSUPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2QueueNRTDCHWithoutFC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2QueueRTDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2SignLinkTP_AAL2SigCDVT01Egr_AAL2SigCDVT01Ing_AAL2SigEarlyPa', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2TP_AAL2PathId_AAL2PathType_AAL2SignLinkATMIfId_AAL2SignLink', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ATMEPProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPCDVT01Egr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPCDVT01Ing', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPEarlyPacketDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPEgressMDCR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPEgressUBRShare', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPIngressMDCR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPIngressUBRShare', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPPCR01Egr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPPCR01Ing', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPPartialPacketDiscard', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPServiceCategory', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPTPATMIfId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPVCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPVPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('COCOChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CalculateCDVT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CreateATMTP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DNBAPTP_CControlPortID_DNBAPATMIfId_DNBAPCDVT01Egr_DNBAPCDVT01I', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GenerateAAL2Num', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InternalHSDPAFCMethodBTS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCCBundleParams_VCCBundleEBS_VCCBundleId_VCCBundlePCR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VPLTP_COCOVPI_VPLTPATMIfId_VPLTPCDVT01Egr_VPLTPEgressMDCR_VPLTP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WBTSId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('connector',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('destinationConnector', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('destinationHolder', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('location', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ethlk',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('acceptableFrameTypes', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('flushFdbOnLos', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('l2BurstSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('l2IngressRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('l2ShaperRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('linkFlappingPreventionTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('linkOAMEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('macAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('portDefaultPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('portDefaultVlanId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('speedAndDuplex', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('synchEMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('l2VlanIdList_highValue_lowValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('fmcg',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRDirReCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLDPCHTxPwrClOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FMCGChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GSMcauseCPICHEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GSMcauseCPICHrscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GSMcauseTxPwrDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GSMcauseTxPwrUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GSMcauseUplinkQuality', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmDLTxPwrThrAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmDLTxPwrThrCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmDLTxPwrThrNrtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmDLTxPwrThrRtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmMaxMeasPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmMeasAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmMeasRepInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmMinHoInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmMinMeasInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmMinSLHOInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmNcellSearchPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmUETxPwrFilterCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmUETxPwrThrAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmUETxPwrThrCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmUETxPwrThrNrtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmUETxPwrThrRtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmUETxPwrTimeHyst', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ISHOClcauseCPICHEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ISHOClcauseCPICHrscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ISHOClcauseTxPwrDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ISHOClcauseTxPwrUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxBSICIdentTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('fmci',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FMCIChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IFHOcauseCPICHEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IFHOcauseCPICHrscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IFHOcauseTxPwrDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IFHOcauseTxPwrUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IFHOcauseUplinkQuality', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqDLTxPwrThrAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqDLTxPwrThrCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqDLTxPwrThrNrtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqDLTxPwrThrRtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqMaxMeasPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqMeasAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqMeasRepInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqMinHoInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqMinMeasInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqMinSLHOInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqNcellSearchPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqUETxPwrFilterCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqUETxPwrThrAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqUETxPwrThrCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqUETxPwrThrNrtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqUETxPwrThrRtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqUETxPwrTimeHyst', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MBLBMobilityOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MBLBMobilityRABComb', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('fmcs',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ActiveSetWeightingCoefficient', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdditionReportingInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdditionTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdditionWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DSRepBasedSHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DropReportingInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DropTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DropWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHAddEcNoOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHRemEcNoOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EcNoFilterCoefficient', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FMCSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoEcNoCancel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoEcNoCancelTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoEcNoThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoEcNoTimeHysteresis', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoRscpCancel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoRscpCancelTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoRscpFilterCoefficient', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoRscpThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoRscpTimeHysteresis', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxActiveSetSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ReplacementReportingInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ReplacementTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ReplacementWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ftm',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('adaptationVersionMajor', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('locationName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('softwareReleaseVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('systemTitle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('userLabel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('fuunit',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('functionalUnitType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('supportedByUnit', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('hopg',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgHCSpriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgHCSthreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgMinRxLevNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgPenaltyTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgPenaltyTimeNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgPriorityCoverage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgPrioritySLHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgQoffset1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgQrxlevMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgRxLevMinHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjgTempOffset1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HOPGChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('hopi',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiEcNoMargin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiHCSpriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiHCSthreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiMinEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiMinEcNoNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiMinRSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiMinRscpNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiPenaltyTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiPenaltyTimeNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiPlossMargin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiPriorityCoverage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiPriorityDCellCAHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiPriorityHSCAHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiPriorityMIMOCAHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiPriorityQuality', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiPrioritySLHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiQoffset1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiQoffset2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiQqualMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiQrxlevMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiTempOffset1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjiTempOffset2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('BlindHORSCPThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HOPIChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('hopl',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjLAbsPrioCellReselec', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjLFreqPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjLQqualminEUTRA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjLQrxlevminEUTRA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjLThreshigh', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjLThreshigh2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjLThreslow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjLThreslow2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HOPLChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('hops',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsHCSpriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsHCSthreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsPenaltyTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsQoffset1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsQoffset2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsQqualMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsQrxlevMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsTempOffset1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjsTempOffset2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EcNoAveragingWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EnableInterRNCsho', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EnableRRCRelease', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHOMarginAverageEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHOMarginPeakEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HOPSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAAvailabilityIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSUPAAvailabilityIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ReleaseMarginAverageEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ReleaseMarginPeakEcNo', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('hw',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NEType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('locationName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('operationalState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('systemTitle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vendorName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('serialNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('softwareReleaseVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('systemReleaseVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iaif',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('destIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('atmIfId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('encapsulationMethod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('usage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vci', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vpi', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ibfd',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('alarmEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bfdEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dstIp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ipbrId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('profileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sessionType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('srcIp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ibfp',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('desiredMinTx', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('detectMult', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('profileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('requiredMinRx', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('idns',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cache', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('localDomain', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('roundRobin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('serverIPAddr_addrValue_addrVer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('idsp',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dscpProfileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('profileList_dscpNumber_phb', sa.TEXT(), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ieif',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cir', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('confCost', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('helloInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ipAddr_localIpAddr_netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('mtu', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('mtuMismatchDetection', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ospfWithBfd', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('qosEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('retransInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('routerDeadInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sbs', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sbsTotal', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('shapedBandwidth', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sir', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sirTotal', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('trafficPathShapingEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('transmitDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('upperLayerShaping', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vlanEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vlanId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPV4Addr_addrTypeIPV4_addrValueIPV4_destAddrIPV4_netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ifType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPV4Addr_addrTypeIPV4_addrValueIPV4_netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ifpg',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('transIfPuPtrs', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('igif',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RncEthernetBw', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ethInterfaceRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ihcp',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iicp',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('echoReplyTmout', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('echoReqPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('maxLostPkt', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('payloadLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('imag',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('imaVersionId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interfaces', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('minNumLinks', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('intp',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ntpServers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ipbr',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('committedBW', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('committedDcnBW', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('committedSigBW', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ifcFlag', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ipBasedRouteName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('localMuxUDPPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('maxMuxPackets', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ratio', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('remoteMuxUDPPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('routeBW', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('udpMuxDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('udpMuxEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iphb',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('phbProfileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('profileList_maxDrop_maxThreshold_minThreshold_phb_quePriority_q', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('profileList_maxDrop_maxThreshold_minThreshold_phb_quePriority_s', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ipnb',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNBAPICSUIndex', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SCTPPortNumberCNBAP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DNBAP_CControlPortID_DNBAPICSUIndex_SCTPPortNumberDNBAP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPBasedRouteId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPNBChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxSCTPFrameSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MinSCTPPortIub', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBAPDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NodeBIPAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WBTSId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ipno',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bfdHoldUpTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('btsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('btsIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('btsSubnetMacAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cesopsnIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('disableFtp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('enableSoam', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('flexBusIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('fpLocalUdpPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('fpMuxAmount', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('fpMuxDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('fpRemoteUdpPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ftmIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ftmNetmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('iHSPAmode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('icmpResponseEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('linkOAMLoopbackSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('mtu', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('oamCir', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('oamTlvReply', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('omsTls', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ret1IpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('rncIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('transportMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('twampMessageRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cPlaneIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('mPlaneIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('planeMacAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sPlaneIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('twampFlag_twampIpAddress_twampReflFlag_udpEchoFlag', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('uPlane2IpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('uPlaneIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPForwardingIPV4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('defaultTTL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('subnetsAreLocal', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('hostName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ipqm',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('BackgroundTCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ConversationalTCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPQMChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InteractiveTHP1TCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InteractiveTHP2TCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InteractiveTHP3TCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('StreamingTCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iprm',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RmExceptions_sourceTwoDiscr_userLabel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ipro',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('addrValueIPV4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ifName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ipBasedRouteId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('phbAF1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('phbAF2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('phbAF3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('phbAF4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('phbBE', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('phbEF', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iprt',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('staticRoutes_bfdId_destIpAddr_gateway_netmask_preference', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ipsecc',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ipSecEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iqos',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dspmProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dspmProfileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('phbProfileId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('phbProfileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('status', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('isbfp',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('desiredMinTx', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('detectMult', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('holdupTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('profileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('requiredMinRx', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('itrkgrp',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('trkGrpBoolVal', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('trkGrpOperation', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('trkType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('itrkobj',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iubsnt',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPV4MaskLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPV4SubnetAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('assocMaxRetrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('hbInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('maxInitRetrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('pathMaxRetrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('rtoInitial', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('rtoMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('rtoMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sackPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('validCookieLife', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iucs',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2PTSigForIuCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNDomainVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CSCNNRI_NRIMaxForCSCN_NRIMinForCSCN', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('CSFlexiIuWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DefaultCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IUCSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IUOIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IuState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MinUDPPortCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NetworkInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RelocationSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtcpActivation', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SignPointCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TRafC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TRatC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TigOR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TinTR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iucsip',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DestIPAddressCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPBasedRouteIdCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPNetmaskCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPQMIdCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IUCSIPChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iuo',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CSCNDRXLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CS_T3212', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IUOChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IuBarringDelayTimerCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IuBarringDelayTimerPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IuBarringRecoveryGroupCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IuBarringRecoveryGroupPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IuBarringRecoveryTimerCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IuBarringRecoveryTimerPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IubTransportSharingInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NRILengthForCSCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NRILengthForPSCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NullNRIForCSPool', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NullNRIForPSPool', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('OperatorWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MNCLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PSCNDRXLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PS_NMO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iups',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNDomainVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CNId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CellFACHRelocSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DefaultCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IUOIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IUPSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IuState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NetworkInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PSCNNRI_NRIMaxForPSCN_NRIMinForPSCN', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PSFlexiIuWeight', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RelocationSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SignPointCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TDataFwd', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TRafC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TRatC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TigOR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TinTR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iupsip',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DestIPAddressPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPBasedRouteIdPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPNetmaskPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPQMIdPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IUPSIPChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('iur',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NeighbouringPLMNid_MCC_MNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AAL2PTSigForIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CellFACHnRncRelocSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DSCPHighIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DSCPLowIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DSCPMedDCHIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DelayThresholdMaxIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DelayThresholdMidIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DelayThresholdMinIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPACCEnabledIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAULCToDSCPIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPAOverIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSUPACCIurEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSUPADLCToDSCPIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IBTSSharing', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPBasedRouteIdIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IURChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterfaceMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IurUPSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxFPDLFrameSizeIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxIurNRTHSDSCHBitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MinUDPPortIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NRncId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NRncNetworkInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NRncRelocationSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NRncSignPointCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NRncVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NeighbouringRNWElement', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('OverbookingSwitchIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ProbabilityFactorMaxIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNSAPCongAndPreemption', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWEOffsetNRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWEOffsetRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWSOffsetNRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWSOffsetRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ivif',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cESoPSN', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cir', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('confCost', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('helloInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('localIpAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('mtuMismatchDetection', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ospfWithBfd', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('qosEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('retransInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('routerDeadInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sbs', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sir', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('transmitDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vlanId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('parentInterface', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vid', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('l2swi',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('defaultPCPUntagged', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dscpMap_dscp_priorityQueue', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('enableLayer2Switching', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('l2PriorityQueueWeight2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('l2PriorityQueueWeight3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('l2PriorityQueueWeight4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('portDefaultPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('portDefaultVlanId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('priorityQueueNonIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('priorityQueuePcp0', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('priorityQueuePcp1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('priorityQueuePcp2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('priorityQueuePcp3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('priorityQueuePcp4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('priorityQueuePcp5', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('priorityQueuePcp6', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('priorityQueuePcp7', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('qosClassification', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vlanAwareSwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('lcelgw',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('accessBbCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cellGroupName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dedicatedBbCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('hsupaBbDecodCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('hsupaBbMinimumUsers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('lCelIdList', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('minNumHsfachUsers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sModId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('shareOfHSDPAUser', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('shareOfHSUPALicences', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('lcelw',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('allowedCarrierList', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cellRange', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('defaultCarrier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('expirationTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('hspaMapping', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('intShutdownTimeout', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('maxCarrierPower', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('mimoType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('rachCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('resourceList_antlId_txRxUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('shutdownStepAmount', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('shutdownWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vamEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('mha',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('active', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('aisgProtocol', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('alarmThresholdLevel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('antBearing', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('antModel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('antSerial', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('antlId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('baseStationID', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('connection', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('downlinkDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('gainResolution', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('hwVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('installerID', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('lnaNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('manufacturer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('maxGain', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('mhaAisgModeEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('mhaAlarmDetection', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('mhaGain', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('mhaType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('minGain', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('prodCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('releaseId3Gpp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('scannedAntennaInterface', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sectorID', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('serNum', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('substance', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('swVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('tmaSubunitRxFreqBandMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('tmaSubunitRxFreqBandMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('tmaSubunitTxFreqBandMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('tmaSubunitTxFreqBandMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('tmaSubunitType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('uplinkDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('wmhConnector', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('installDate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('module',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('identificationCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('state', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('subrackSpecificType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('userLabel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vendorName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('serialNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('mrbts',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('actSwMonitoring', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('autoConfBlocked', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('commissioningRequired', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('enAutoLicReq', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('resetToTestDedicated', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sharedRfTechnologies', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('timeZone', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitList_primaryConnection_prodCode_unitName_unitNumber_variant', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitList_primaryConnection_prodCode_secondaryConnection_unitNam', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('ospfv2',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('confPref', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ospfEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ospfRouterId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('refBandwidth', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('spfDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('spfHoldTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('spfMaxHoldTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('pischdlitem',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ActionMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NEList_BaseId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PIObjects', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PlanName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('StartDate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('StopDate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('periods_day_duration_hour_interval_minute', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('scheduleIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('pmschdls',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('pptt',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('pdhLbo', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('pdhLineType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('pwne',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bfdTimer_bfdDetectMult_desiredMinTxIntvl_requiredMinRxIntvl', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cwEnable', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('qos',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('perHopBehaviourWeightList_assuredForwardingClass1_assuredForwar', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('trafficTypesMap_dscpList_pHB_trafficType_vlanPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('trafficTypesMap_pHB_trafficType_vlanPrio', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('rmod',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('climateControlProfiling', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('connectionList_linkId_positionInChain_sModId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('moduleLocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('prodCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('radioSiteId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('serNum', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('rnac',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLoadTxPower', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRNumofReconf', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRwinSizeSCload', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjustmentPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdjustmentRatio', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('BitRateSetPSNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHSlopeOfTheCurve', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLInLoopPCStepSizeCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLLoadSource', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLmaxBitRateSF128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLmaxBitRateSF16', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLmaxBitRateSF256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLmaxBitRateSF32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLmaxBitRateSF64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLpuncturingLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DownlinkInnerLoopPCStepSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DynHSUPABLERAlgTrgTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DynHSUPABLERBurstDataRx', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DynHSUPABLERContDataRx10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DynHSUPABLERContDataRx2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DynHSUPABLERFrameWinSiz', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DynHSUPABLERMaxRateThrB', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DynHSUPABLERMaxRateThrC10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DynHSUPABLERMaxRateThrC2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DynHSUPABLERPeakRateRx', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DynHSUPABLERThrBurstyTP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DynHSUPABurstyPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHSlopeOfTheCurve', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EmeCallLevelValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EmeCallPCIValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EmeCallPVIValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ExpectReorderingPDCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FOLPCSIRTgtModInt', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FOLPCStepSizSIRTgt', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FmaxPeriodPDCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FmaxTimePDCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FreePtxSafetyMarginStr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrachBetaC120', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrachBetaC15', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrachBetaC30', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrachBetaC60', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrachBetaD120', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrachBetaD15', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrachBetaD30', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrachBetaD60', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HeaderCompressionMethod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('L1BurstDataBLERTrgtEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('L1ContBLERTrgtEDCH10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('L1ContBLERTrgtEDCH2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('L1PeakRateBLERTrgtEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LoadBasedAMRCodecMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxAdjustmentStep', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxFreezingTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxHeaderPDCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNumberOfReAttemptsCong', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MinPrefChange', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NonTCPspacePDCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PCPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PCrangeDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PagingRestrictionInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PeriodULRCAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrefSubtract', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RAU_LAU_RestrictionInd', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNACChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNARDSACCell_DCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNARDSACCell_PCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNARDSACGuardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRCConnSetupMsgSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SRBDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SignallingLinkInactivityTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('StepSizeForDCHBLER', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('StepSizeForEDCHBLER', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TCPspacePDCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TDMultForHSDPAStreaming', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TFDCHZeroBitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULFastOLPCDTXthld', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULmaxBitRateSF128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULmaxBitRateSF16', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULmaxBitRateSF256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULmaxBitRateSF32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULmaxBitRateSF64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULmaxBitRateSF8', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULpuncturingLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UlScrCodeMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UpLinkInitialTransmitPowerMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UpLinkRecoveryPeriodPowerMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('rnc',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ActivePRNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AlarmSetforWCELBLINIT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CBCSourceIPAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CSAttachDetachAllowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CommonMCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CommonMNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CommonMNCLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ConnectionRetryCounter', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLBLERConfInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ExtendedULDLactivationTmr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MACLogChPriSRB1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MACLogChPriSRB2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MACLogChPriSRB3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxAMRCapacityErl', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxCarrierConnectivity', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxIubPSThroughputMbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N302', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N304', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N308', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('OMSBackupIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('OMSIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMDuration', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMExceededTrafficDur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PageRep1stInterv', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PageRep2ndInterv', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RANAPprocInitWait', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNCChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNCIPAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNCName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTservicesForPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RestrictionInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RncClientTLSMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RncOptions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SIB11_priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIB15_priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIB18_priority', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SIB19Priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIB1_priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIB2_priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIB3_priority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIB5_priority', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SecOMSIpAddress', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ServingOMS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ServingOMSAdminSetting', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T302', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T304', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T305', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T307', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T308', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T309', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T314', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T316', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T317', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWE_NRT_DCH_tti10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWE_NRT_DCH_tti20', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWE_NRT_DCH_tti40', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWE_RT_DCH_tti10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWE_RT_DCH_tti20', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWE_RT_DCH_tti40', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWE_Speech', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWS_NRT_DCH_tti10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWS_NRT_DCH_tti20', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWS_NRT_DCH_tti40', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWS_RT_DCH_tti10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWS_RT_DCH_tti20', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWS_RT_DCH_tti40', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWS_Speech', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULBLERConfInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UL_DLcapacityReqWait', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WCELIdleAlarmTimeout', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('rnfc',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRCodecSetEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRWithEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRWithHSDSCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AutomDLPlanUpdEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('BTSLoadIndSel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CCCHforCUCallowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CMmasterSwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CSCallSetUpFACHPCHImpr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CSFBEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CUCforPCHtoDCHallowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CVUserInactInSignConnRel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCH00SuppOnIurEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHBitRateBalancing', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHScheOverIur', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHtoPCHEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLOptimisationUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DynUsageHSDPAReturnChannel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EUTRAdetection', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FRLCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FastDormancyEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FastPCHSwitchEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FasterOLPCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FemtoHandoverControl', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FlexULRLCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FlexUpgrUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HLSModeSelection', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPA16KBPSReturnChannel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPA48UsersEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPADynamicResourceAllocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAMobility', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPAInterRNCMobility', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPAOverIurExt', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSUPADynBLEREnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IFHOOverIurEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IFHOOverIurExt', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ISHOCancellation', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ISHOInIurMobility', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IuPSrelWait3G2GMultiServ', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LFDProfEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MIBPLMNIdIncluded', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MOCNenabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MRABRelocVendSpCorr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PBSpolicy', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PPACEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PSOpThroUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMDriftAllowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PostVerifPeriodDLSynch', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PowerBalancing', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RABDRAEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RABFailDueUESTCorr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNFCChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRCSetupCCHEnabledR99', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIBCapabilityCheck', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOCmAllowedNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SRVCCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SignConnActivitySupervision', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SubscriberTrace', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WBAMRCodecSetEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('rnhspa',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WeightForARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WeightForARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WeightForARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ATOSRBsOnHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msCPCOptObjective', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msCQIDTXTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msCQIFeedbackCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msInacThrUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msInacThrUEDTXCycl2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msMACDTXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msMACInacThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msUEDPCCHburst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msUEDPCCHburst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msUEDTXCycle1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msUEDTXCycle2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N10msUEDTXLongPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msCPCOptObjective', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msCQIDTXTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msCQIFeedbackCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msInacThrUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msInacThrUEDTXCycl2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msMACDTXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msMACInacThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msUEDPCCHburst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msUEDPCCHburst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msUEDTXCycle1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msUEDTXCycle2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N2msUEDTXLongPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msCPCOptObjective', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msCQIDTXTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msCQIFeedbackCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msInacThrUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msInacThrUEDTXCycl2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msMACDTXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msMACInacThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msUEDPCCHburst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msUEDPCCHburst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msUEDTXCycle1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msUEDTXCycle2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S10msUEDTXLongPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msCPCOptObjective', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msCQIDTXTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msCQIFeedbackCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msInacThrUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msInacThrUEDTXCycl2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msMACDTXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msMACInacThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msUEDPCCHburst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msUEDPCCHburst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msUEDTXCycle1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msUEDTXCycle2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('S2msUEDTXLongPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msCPCOptObjective', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msCQIDTXTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msCQIFeedbackCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msInacThrUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msInacThrUEDTXCycl2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msMACDTXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msMACInacThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msUEDPCCHburst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msUEDPCCHburst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msUEDTXCycle1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msUEDTXCycle2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V10msUEDTXLongPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msCPCOptObjective', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msCQIDTXTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msCQIFeedbackCPC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msInacThrUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msInacThrUEDTXCycl2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msMACDTXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msMACInacThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msUEDPCCHburst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msUEDPCCHburst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msUEDRXCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msUEDTXCycle1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msUEDTXCycle2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('V2msUEDTXLongPreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CPICHECNOSRBHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CPICHECNOThreEDCH2MS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CPICHRSCPThreEDCH2MS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CPICHRSCPThreSRBHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCellVsMIMOPreference', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DiscardTimerHSCSVoice', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHCTSwitchGuardTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHMACdflowtputStrTtT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHMaxHARQReTxStr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHMaxHarqReTxSRB', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHMaxHarqReTxSRB2MS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHMaxNumberOfHARQReTx', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHQOSClasses', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EnablDelayHHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EnablDelayStand', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FDPCHAllocMinInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FDPCHAndSRBOnHSPATC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FDPCHSetupEC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FactorEDCHMaxBRPSstream', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FactorEDCHMaxBitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FactorEDCHMaxBitRate2NRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FactorEDCHMaxBitRate3NRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPACPICHCTSRepPer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPACPICHEcNoThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPACellChangeRepetitionTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAChaTypeSwitchWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAMaxCellChangeRepetition', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAPeakRateLimitRABMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPARRCdiversity', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPASRBWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHCTSwitchGuardTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHGuardTimerLowThroughput', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHQoSclasses', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri0DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri0UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri10DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri10UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri11DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri11UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri12DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri12UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri1DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri1UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri2DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri2UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri3DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri3UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri4DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri4UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri5DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri5UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri6DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri6UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri7DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri7UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri8DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri8UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri9DL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NBRForPri9UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPDSCHAdjustPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HappyBitDelayConditionEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HsdschGuardTimerHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InacUserNbrXXXOverNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InacUsersOverloadFact', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MACdflowthroughputRelThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MACdflowthroughputTimetoTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MACdflowtputStrTtT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MACdflowutilStrTtT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MEHCQIFeedbackCycle', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MEHHSUPAUserIncr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxBitRateNRTMACDFlow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxCSDelayRNCETTI10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxCSDelayRNCETTI2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxCSDelayUE', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxEHARQReTxCSAMR10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxEHARQReTxCSAMR2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxReWaitTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxReWaitTime2msTTI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxReWaitTimeRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxSetOfEDPDCHCSAMR10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxSetOfEDPDCHCSAMR2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NRTRBBRWithEDCHStr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PeriodicityForSI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PowerOffsetEHARQVoice', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PowerOffsetForSI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNHSPAChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SmartHSPATimeToTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SmartHSPATputAveWin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T1HSCSVoice', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TGPLAMRHSDPAInterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TGPLHSDPAInterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ThresholdMaxEDPDCHSR1920kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ThresholdMaxEDPDCHSR3840kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ThresholdMaxEDPDCHSR960kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UPResAllocInCellDCHWait', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCPHSDPAPrevDuration', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCPHSDPAUserIncr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WeightDCHBG', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WeightDCHTHP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WeightDCHTHP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WeightDCHTHP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WeightHSPABG', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WeightHSPATHP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WeightHSPATHP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WeightHSPATHP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('rnmobi',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AnchorFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AnchorFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AnchorHopiIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AnchorHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CellReselectionObservingTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DRRCForHSDPALayerServices', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DirectedRRCForHSDPALayerEnhanc', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DisablePowerInHSDPALayeringDecision', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EcnoDifferenceThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EnableULQualDetRep', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FastDormOverCpcPri', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FastUECancel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FastUEPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FastUEThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GANetwARFCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GANetwBCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GANetwNCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GapPositionSingleFrame', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmHandoverAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmHandoverCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmHandoverNrtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('GsmHandoverRtPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSCAHORabCombSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPACPICHAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPACPICHReportPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPACellChangeMinInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPALayerLoadShareThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPASIRErrorAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPASIRErrorFilterCoefficient', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPASIRErrorReportPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPASIRErrorServCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPASIRErrorTargetCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAServCellWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPADRNCEcNoOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPADRNCSIRErrorOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IBTSRabCombSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOMinNrtDchAllocTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LowerRxTxTimeDiff', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MBLBGuardTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxCellReselections', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNumISHOClPerAS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MultipleBSICIdent', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NCHOFilterCoeffComLoadMeasDRNCCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NCHOHystComLoadMeasDRNCCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NCHOThrComLoadMeasDRNCCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PreferBandForLayering', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RANAPCause1LoadHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RANAPCause2LoadHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RANAPCause3LoadHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RANAPCause1ServHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RANAPCause2ServHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RANAPCause3ServHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNMOBIChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOHandlingOfCellLoadMeasNotAct', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOProfileBackgroundPSNRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOProfileConvCSSpeech', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOProfileConvCSTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOProfileConvPSRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOProfileConvPSSpeech', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOProfileInteractivePSNRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOProfileStreamCSNTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOProfileStreamPSRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOUseBackgroundPSNRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOUseConvCSSpeech', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOUseConvCSTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOUseConvPSRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOUseConvPSSpeech', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOUseInteractivePSNRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOUseStreamCSNTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SLHOUseStreamPSRTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ServBtwnHSDPALayers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ServicesToHSDPALayer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SmartLTELayeringPrevT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SmartLTELayeringServ', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TGPLdoubleframeNRTPSgsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TGPLdoubleframeNRTPSinterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TGPLsingleframeAMRgsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TGPLsingleframeAMRinterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TGPLsingleframeCSgsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TGPLsingleframeCSinterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TGPLsingleframeNRTPSgsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TGPLsingleframeNRTPSinterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TGPLsingleframeRTPSgsm', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TGPLsingleframeRTPSinterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TRelocOverall', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TRelocPrep', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UEQualityRepInterv', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UETxPowerMaxRef', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ULQualDetRepThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UpperRxTxTimeDiff', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('rnps',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ActivationTimeOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CellDCHtestTmr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CrQueuingTimeDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CrQueuingTimeUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilBelowDowngradeThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilHighAveWin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilHighBelowNRTDataRateThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilHighTimeToTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerAveWin128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerAveWin256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerAveWin32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerAveWin384', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerAveWin64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerDowngradeThr128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerDowngradeThr256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerDowngradeThr32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerDowngradeThr384', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerDowngradeThr64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerTimeToTrigger128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerTimeToTrigger256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerTimeToTrigger32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerTimeToTrigger384', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilLowerTimeToTrigger64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilMeasGuardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperAveWin128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperAveWin256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperAveWin32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperAveWin384', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperAveWin64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperDowngradeThr128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperDowngradeThr256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperDowngradeThr32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperDowngradeThr384', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperDowngradeThr64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperTimeToTrigger128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperTimeToTrigger256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperTimeToTrigger32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperTimeToTrigger384', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilUpperTimeToTrigger64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLOptimisationProhibitTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLOptimisationPwrOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FactorMinPBSinterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactDetForStreamingRB', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IurPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MEHTVMPendingTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForBackARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForBackARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForBackARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForConvOnHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForIntSignaling', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForIntTHP1ARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForIntTHP1ARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForIntTHP1ARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForIntTHP2ARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForIntTHP2ARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForIntTHP2ARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForIntTHP3ARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForIntTHP3ARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForIntTHP3ARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForSRBsOnHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForStreamARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForStreamARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriForStreamARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNPSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTOverNRTPriThresholdARP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTOverNRTPriThresholdARP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTOverNRTPriThresholdARP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SmartInactTimerFACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SmartInactivityTimerDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToCellFACHinTest', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdDLHigh', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdDLHighDCH128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdDLHighDCH16', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdDLHighDCH256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdDLHighDCH32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdDLHighDCH64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdDLHighDCH8', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdULHigh', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdULHighDCH128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdULHighDCH16', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdULHighDCH256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdULHighDCH32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdULHighDCH64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdULHighDCH8', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolTimeToTriggerDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolTimeToTriggerUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULLoadStateTTT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('rnrlc',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCBufMaxOverbook2NRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCBufMaxOverbook3NRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE100', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE1150', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE1250', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE150', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE1500', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE1800', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE1k', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE200', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE2300', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE2550', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE300', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE50', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE500', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCMaximumBufferUE750', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCmaximumBufferUE400', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfNRTPSCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfNRTPSFilterReTX', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfNRTPSMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfNRTPSMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfNRTPSMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfNRTPSPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfNRTPSPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfNRTPSPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfNRTPSPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfNRTPSPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfNRTPSTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB136MaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB136PeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB136PeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB136PollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB136PollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB136PollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB136Triggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB34MaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB34PeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB34PeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB34PollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB34PollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB34PollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfSRB34Triggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfStreamCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfStreamDiscardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfStreamFilterReTX', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfStreamMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfStreamMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfStreamMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfStreamPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfStreamPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfStreamPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfStreamPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfStreamPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnDCHOfStreamTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnEDCHOfNRTPSCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnEDCHOfNRTPSMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnEDCHOfNRTPSMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnEDCHOfNRTPSMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnEDCHOfNRTPSPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnEDCHOfNRTPSPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnEDCHOfNRTPSPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnEDCHOfNRTPSPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnEDCHOfNRTPSPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnEDCHOfNRTPSTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHStrPSCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHStrPSDiscardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHStrPSMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHStrPSMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHStrPSMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHStrPSPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHStrPSPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHStrPSPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHStrPSPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHStrPSPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHStrPSTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfPSMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfPSMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfPSMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfPSPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfPSPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfPSPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfPSPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfPSPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfPSTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfSRBMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfSRBPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfSRBPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfSRBPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfSRBPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfSRBPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnFACHOfSRBTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnHSDSCHOfNRTPSCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnHSDSCHOfNRTPSFilterReTX', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnHSDSCHOfNRTPSMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnHSDSCHOfNRTPSMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnHSDSCHOfNRTPSMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnHSDSCHOfNRTPSPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnHSDSCHOfNRTPSPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnHSDSCHOfNRTPSPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnHSDSCHOfNRTPSPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnHSDSCHOfNRTPSPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCOnHSDSCHOfNRTPSTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHStrDiscardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHStrPSCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHStrPSFilterReTX', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHStrPSMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHStrPSMaxMRW', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHStrPSMaxRST', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHStrPSPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHStrPSPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHStrPSPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHStrPSPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHStrPSPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHStrPSTriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate1Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate2Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate3Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate4Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate5', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate5Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate6', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate6Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate7', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate7Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate8', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRelatTXWindowRate8Size', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRespTimeDCH10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRespTimeDCH20', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRespTimeDCH40', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRespTimeDCHRevHSDSCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRespTimeRevEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRespTimeEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRespTimeFACHAndRACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRespTimeHSDSCHRevDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRespTimeHSDSCHRevEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCSRB3n4PeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCSRB3n4RespTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCRespTimeSRBHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCSRBHSPAMaxDAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCSRBHSPAPeriodMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCSRBHSPAPeriodMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCSRBHSPAPollPDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCSRBHSPAPollSDU', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCSRBHSPAPollWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCSRBHSPATriggers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCTXWindowSizeSRB2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCTXWindowSizeSRB3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRLCTXWindowSizeSRB4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PDUSizeBitRateThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PDUSizeCodeThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PDUSizeSIRThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RLCConfOptionFPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNRLCChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SDUdiscardModeRTPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UMRLCEVoiceDiscardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('rntrm',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('A2EA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af122AMRDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af122AMRUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af59AMRDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af59AMRUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af144CSStreDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af144CSStreUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af576CSStreDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af576CSStreUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af64CSConDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af64CSConUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af128And136DCCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af128And136DCCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af16And17DCCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af16And17DCCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af32And34DCCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af32And34DCCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfFACHCCDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfFACHCIDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfFACHContUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfFACHSDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfFACHUDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfRACH208UL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfRACHContDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfRTHSUPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfSRBOnHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfSRBOnHSUPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af128NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af128NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af16NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af16NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af256NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af256NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af32NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af32NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af384NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af384NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af64NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af64NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af8NRTDCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af8NRTDCHUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfPCHContUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AfPCHDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af128RTPSAMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af128RTPSAMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af128RTPSUMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af128RTPSUMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af16RTPSAMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af16RTPSAMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af16RTPSUMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af16RTPSUMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af256RTPSAMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af256RTPSUMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af32RTPSAMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af32RTPSAMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af32RTPSUMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af32RTPSUMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af64RTPSAMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af64RTPSAMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af64RTPSUMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af64RTPSUMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af8RTPSAMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af8RTPSAMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af8RTPSUMDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Af8RTPSUMUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DSCPBTSOMToBTS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DSCPBTSOMToOMS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DSCPForGTPSignalling', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EchoRequestSending', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAFlowControlLowThresholdDedicatedVCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAFlowControlLowThresholdSharedVCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAFlowControlTargetDelayDedicatedVCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAFlowControlTargetDelaySharedVCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPStackErrorTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IuDATree', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IubDATree', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IurDATree', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N3Requests', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNTRMChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RespSyncCounterIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RespSyncModEnableIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RespSyncTimerIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T3Response', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('THP1DelaySensitivitySwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('THP2DelaySensitivitySwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('THP3DelaySensitivitySwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWEOffsetForOverbook', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWSOffsetForOverbook', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULCACSwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UsedSRBALCSet', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('rstp',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('actRstp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bridgeForwardDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bridgeHelloTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bridgeIdentifierPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('bridgeMaxAge', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('forcedProtocolVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('transmitHoldCount', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('sbr4',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('srcIPAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('subnet', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('smod',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('climateControlProfiling', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('extAlList_cancelDelay_descr_id_inUse_polarity_severity_startDel', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('moduleLocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('prodCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('serNum', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('syncMaster', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('technology', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('sptt',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('srt4',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dstIPAddr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('netmask', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('subnet', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('srtt',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('stpg',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ssmSelExt2M', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ssmSelPDH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ssmSelSyncE', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ssmType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('synchERegenOn', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('synchroSourceList_clockProtocol_interfaceNumber_priority_ssmAcc', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('stport',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('disableStpParticipation', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('portNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('portPathCost', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('portPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('submodule',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('identificationCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('serialNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('vendorName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('subrack',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateOfLastService', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('identificationCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interchangeability', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('locationName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('serialNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('subrackType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('svtt',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('sync',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('tctt',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('connectivityPtr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('operationalState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('tmpar',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('cacCommittedBitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dcnCommittedBitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('externalNATIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('farEndSctpSubnetIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('farEndSctpSubnetMask', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('minSCTPPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('minUDPPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('signallingCommittedBitRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('topb',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('topf',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('acceptedClockQuality', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('actTopFreqSynch', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('announceRequestMode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ieeeTelecomProfile', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('logMeanSyncValue', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('topDomainNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('trde',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('conformanceDefinition', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('minDesiredCellRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('peakCellRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ubrShare', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('userLabel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('egressCDVTolerancePCRCLP0plus1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('egressPeakCellRateCLP0plus1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('serviceCategory', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ingressCDVTolerancePCRCLP0plus1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ingressPeakCellRateCLP0plus1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('egressMDCR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('egressUBRShare', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ingressMDCR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ingressUBRShare', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('twamp',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('destIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('destPort', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dscp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('messageSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('plrAlarmThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('rttAlarmThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('sourceIpAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('twampr',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('uni',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('underlyingTTPPtr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('unit',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitTypeActual', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitTypeExpected', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('identificationCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interchangeability', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('numberOfSlotsOccupied', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('operationalState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('position', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('serialNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('vbts',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ControllerIdPair_IHSPAadapterId_ServingRNCId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DediMeasRepPeriodCSdata', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DediMeasRepPeriodPSdata', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DedicatedMeasReportPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HARQRVConfiguration', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MeasFiltCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NodeBRABReconfigSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VBTSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('vcct',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('trafficDescriptorId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('egressFrameDiscardEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ingressFrameDiscardEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('operationalState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('segmentEndPoint', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('trafficDescriptorPtr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('vcel',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CSAMRModeSET', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CSAMRModeSETWB', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DirectSCCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHMinimumSetETFCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoSetIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FastActOfTargetServCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FastCompletionOfSCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoMaxAllowedBitrateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoMaxAllowedBitrateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAenabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPASCCSpecificATO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPwrOffsetUpdateDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSUPAEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InitialBitRateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InitialBitRateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxBitRateDLPSNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxBitRateULPSNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxTotalUplinkSymbolRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MinAllowedBitRateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MinAllowedBitRateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NrtFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NrtFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NrtFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NrtHopgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NrtHopiIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NrtHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PowerOffsetUpdMsgSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxOffsetHSSCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTWithHSDPAFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTWithHSPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTwithHSDPAFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTwithHSDPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTwithHSDPAHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RelocComm_in_InterRNC_HHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtHopgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtHopiIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RxDivIndicator', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SRBDCHFmcsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SRBHopsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCELChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WACSetIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('vctt',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('aalProfilePtr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('enableChannelUtlStatistics', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('vpct',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('trafficDescriptorId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('administrativeState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('operationalState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('segmentEndPoint', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('trafficDescriptorPtr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('vptt',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('interfaceNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('unitNumber', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('connectivityPtr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('wac',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilRelAveWin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilRelThrDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilRelThrUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCHUtilRelTimeToTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHMACdFlowThroughputAveWin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHMACdFlowThroughputRelThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHMACdFlowThroughputTimetoTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAInitialBRULStrNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAMaxBitrateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAMinBRULStrNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAinitialBitrateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAminAllowedBitrateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactCPCBatOptT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactCPCNoBatOptT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactNonCPCBatOptT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactNonCPCNoBatOptT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerDownlinkDCH128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerDownlinkDCH16', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerDownlinkDCH256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerDownlinkDCH32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerDownlinkDCH320', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerDownlinkDCH384', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerDownlinkDCH64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerDownlinkDCH8', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerUplinkDCH128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerUplinkDCH16', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerUplinkDCH256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerUplinkDCH32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerUplinkDCH320', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerUplinkDCH384', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerUplinkDCH64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactivityTimerUplinkDCH8', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MACdflowthroughputAveWin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MACdflowutilRelThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MACdflowutilTimetoTrigger', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MSActivitySupervision', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxNoiseMaxTuneAbsolute', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolPendingTimeDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolPendingTimeUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdULLow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UL_DL_activation_timer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WACChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WaitTimeRRCbackground', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WaitTimeRRCconversational', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WaitTimeRRCemergency', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WaitTimeRRChighPrioritySignalling', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WaitTimeRRCinterRATreselection', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WaitTimeRRCinteractive', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WaitTimeRRClowPrioritySignalling', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WaitTimeRRCother', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WaitTimeRRCregistration', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WaitTimeRRCstreaming', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WaitTimeRRCsubscribed', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WaitTimeRRCunknown', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('wbts',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ATMInterfaceID', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('BTSAdditionalInfo', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('BTSIPAddress', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('BTSSupportForHSPACM', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('BlindHOIntraBTSQCheck', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('COCOId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCNLinkStatus', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCNSecurityStatus', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLORLAveragingWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DSCPHigh', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DSCPLow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DSCPMedDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DSCPMedHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DediMeasRepPeriodCSdata', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DediMeasRepPeriodPSdata', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DedicatedMeasReportPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DelayThresholdMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DelayThresholdMax2msTTI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DelayThresholdMid', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DelayThresholdMid2msTTI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DelayThresholdMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DelayThresholdMin2msTTI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HARQRVConfiguration', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPA14MbpsPerUser', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPACCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAULCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSUPACCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSUPADLCToDSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSUPAXUsersEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPBasedRouteIdIub', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPBasedRouteIdIub2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPBasedRouteIdIub3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPBasedRouteIdIub4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IPNBId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactCACThresholdATM', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactCACThresholdIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InactUsersCIDThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IntelligentSDPrioHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IubTransportMedia', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IubTransportSharing', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LoadControlPeriodPS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxFPDLFrameSizeIub', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNumberEDCHLCG', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MeasFiltCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MinUDPPortIub', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NESWVersion', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NEType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NbrOfOverbookedHSDPAUsers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NodeBRABReconfigSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('OverbookingSwitch', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PDUSize656WithHSDSCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PSAveragingWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PSRLAveragingWindowSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMAVTrafficVERLogic', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMEnableWakeUpTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMInUse', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMRemCellSDBeginHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMRemCellSDBeginMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMRemCellSDEndHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMRemCellSDEndMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMShutdownBeginHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMShutdownBeginMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMShutdownEndHour', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMShutdownEndMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMWeekday', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ProbabilityFactorMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ProbabilityFactorMax2msTTI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxAlpha', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxMeasAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxTargetPSAdjustPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxAlpha', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxDPCHmax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxDPCHmin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxMeasAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RACHloadIndicationPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RFSharingState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRIndPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRMULDCHActivityFactorCSAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRMULDCHActivityFactorCSNTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRMULDCHActivityFactorCSTData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRMULDCHActivityFactorPSBackgr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRMULDCHActivityFactorPSStream', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRMULDCHActivityFactorPSTHP1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRMULDCHActivityFactorPSTHP2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRMULDCHActivityFactorPSTHP3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRMULDCHActivityFactorSRB', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ReleaseTimerForSharedHSDPAallocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SchedulingPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SharedHSDPAVCCSelectionMethod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SharedHSDPAallocation', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TQMId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TQMId2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TQMId3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TQMId4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWEOffsetNRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWEOffsetRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWSOffsetNRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWSOffsetRTDCHIP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VPI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WBTSChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WBTSName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WBTSSWBuildId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WinACRABsetupDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WinACRABsetupUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WinLCHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WinLCHSUPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )
    op.create_table('wcel',
    *[sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WCELMCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WCELMNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ACBarredList', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AICHTraTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMROverSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMROverTransmission', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMROverTxNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMROverTxNonHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMROverTxTotal', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRSF', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRTargetSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRTargetTransmission', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRTargetTxNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRTargetTxNonHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRTargetTxTotal', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRUnderSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRUnderTransmission', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRUnderTxNC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRUnderTxNonHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AMRUnderTxTotal', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ATOSRBsOnHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AbsPrioCellReselec', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ActivationTimeOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdminCellState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AdminPICState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AllowedPreambleSignatures', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AllowedRACHSubChannels', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AltScramblingCodeCM', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('AssignedPICPool', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('BlindHOEcNoThrTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('BlindHORSCPThrTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CCHSetupEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CIRForFDPCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CPCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CPICHEcNoSRBMapRRC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CPICHRSCPSRBMapRRC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CPICHtoRefRABoffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CSAMRModeSET', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CSAMRModeSETWB', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CSGroupId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CUCEcNoThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CUCRSCPThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CableLoss', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CellAdditionalInfo', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CellBarred', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CellRange', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CellSelQualMeas', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CellWeightForHSDPALayering', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Cell_Reserved', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CodeTreeOptTimer', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CodeTreeOptimisation', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CodeTreeOptimisationGuardTime', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('CodeTreeUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCellAndMIMOUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCellHSDPACapaHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCellHSDPAEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DCellHSDPAFmcsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DLLoadStateTTT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DPCHOverHSPDSCHThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DPCModeChangeSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DRRCprxMargin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DRRCprxOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DRRCptxMargin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DRRCptxOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DefMeasCtrlReading', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DeltaPrxMaxDown', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DeltaPrxMaxUp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DeltaPtxMaxDown', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DeltaPtxMaxUp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DirectSCCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DirectedRRCEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DirectedRRCForHSDPALayerEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHCapability', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHMinSetETFCIT0', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHMinimumSetETFCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHOpState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoSetIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FDPCHCodeChangeEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FDPCHEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FDPCHSetup', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FachLoadMarginCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FachLoadThresholdCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FastActOfTargetServCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FastCompletionOfSCC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('FastHSPAMobilityEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HCS_PRIO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoMaxAllowedBitrateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HHoMaxAllowedBitrateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSCapabilityHONumbUE', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSCapabilityHOPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPA64QAMallowed', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPA64UsersEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPACPICHAveWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPACPICHReportPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPACellChangeMinInterval', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPALayeringCommonChEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAMaxCellChangeRepetition', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPASRBWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAServCellWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAcapability', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDPAenabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSDSCHOpState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSLoadStateHSDBRLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSLoadStateHSDOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSLoadStateHSUBRLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSLoadStateHSUOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSLoadStateHSUResThr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPA72UsersPerCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPACapaHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPAQoSEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPASCCSpecificATO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPDSCHCodeSet', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPDSCHMarginSF128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSPwrOffsetUpdateDelay', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSUPA2MSTTIEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HSUPAEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('HspaMultiNrtRabSupport', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IncomingLTEISHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InitialBitRateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InitialBitRateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterFreqScaleTresel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('InterRATScaleTresel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('IntraFreq_Cell_Reselect_Ind', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOCapaReqRejRateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOCapaReqRejRateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHODelayOFFCapaReqRejRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHODelayOFFHardBlocking', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHODelayOFFInterference', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHODelayOFFResRateSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOHardBlockingBaseLoad', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOHardBlockingRatio', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOHystTimeCapaReqRejRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOHystTimeHardBlocking', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOHystTimeInterference', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOHystTimeResRateSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHONRTTrafficBaseLoad', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHONumbUEInterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHONumbUEInterRAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOPwrOffsetDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOPwrOffsetUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOResRateSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOWinSizeOFFCapaReqRejRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOWinSizeOFFHardBlocking', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOWinSizeOFFInterference', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOWinSizeOFFResRateSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOWinSizeONCapaReqRejRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOWinSizeONHardBlocking', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOWinSizeONInterference', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LHOWinSizeONResRateSC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LTECellReselection', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LoadBasedCPICHEcNoSRBHSPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('LoadBasedCPICHEcNoThreEDCH2MS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MBLBInactivityEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MBLBLoadInfoDistr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MBLBMobilityEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MBLBRABSetupEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MBLBRABSetupMultiRAB', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MBLBStateTransEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MEHHSDPAUserNbrCQI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MEHHSUPAUserNbr2msTTI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MEHLoadStateTtT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MEHMaxHSUPAUsers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MEHQueueThreshold', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MEHULLHSDPAUALimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MHA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MIMOEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MIMOHSDPACapaHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MIMOWith64QAMUsage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MassEventHandler', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxBitRateDLPSNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxBitRateULPSNRT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxCodeReleases', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxDLPowerCapability', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxIncrInterferenceUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNbrOfHSSCCHCodes', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNumbHSDPAUsersS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNumbHSDSCHMACdFS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNumberEDCHCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNumberHSDPAUsers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNumberHSDSCHMACdFlows', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNumberUECmHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNumberUECmSLHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNumberUEHSPACmHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxNumberUEHSPACmNCHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MaxTotalUplinkSymbolRate', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MinAllowedBitRateDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MinAllowedBitRateUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('MultiplePLMNListIncluded', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N300', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N312', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N312Conn', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N313', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('N315', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NASsignVolThrDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NASsignVolThrUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NCr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NbrOfSCCPCHs', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NonHCSNcr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NonHCSTcrMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NonHCSTcrMaxHyst', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NrtFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NrtFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NrtFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('NumberEDCHReservedSHOBranchAdditions', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('OCULNRTDCHGrantedMinAllocT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('OCdlNrtDCHgrantedMinAllocT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PBSgrantedMinDCHallocTequalP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PBSgrantedMinDCHallocThigherP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PBSgrantedMinDCHallocTlowerP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PCH24kbpsEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PFLIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PICState', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PI_amount', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PRACHDelayRange', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PRACHRequiredReceivedCI', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PRACHScramblingCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PRACH_preamble_retrans', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PSGroupId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PTxPICH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMAVLimitDCHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMAVLimitNRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMAVLimitRTDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMAVLimitRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMAVPwrNRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMAVPwrRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMCellGroup', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMEXPwrLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMEXUsrLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMSDLimitDCHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMSDLimitNRTDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMSDLimitNRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMSDLimitRTDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMSDLimitRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMSDPwrNRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMSDPwrRTDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMSDPwrRTHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMShutdownOrder', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PWSMShutdownRemCell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PowerOffsetLastPreamblePRACHmessage', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PO1_15', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PO1_30', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PO1_60', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PowerOffsetUpdMsgSize', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PowerRampStepPRACHpreamble', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PowerSaveHSPAType', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PriScrCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxLoadMarginDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxLoadMarginEDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxLoadMarginMaxDCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxMaxOrigTargetBTS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxMaxTargetBTS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxMeasFilterCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxNoise', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxNoiseAutotuning', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxTargetMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxTargetPSMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxTargetPSMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxTargetPSStepDown', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PrxTargetPSStepUp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxAICH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxCellMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxDLabsMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxFDPCHMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxFDPCHMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxHighHSDPAPwr', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxMarginCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxMaxEHICH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxMaxHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxMeasFilterCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxOffsetEAGCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxOffsetEAGCHDPCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxOffsetEHICHDPCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxOffsetERGCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxOffsetERGCHDPCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxOffsetExxCH2ms', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxOffsetExxCHSHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxOffsetFDPCHSHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxOffsetHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxPSstreamAbsMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxPrimaryCCPCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxPrimaryCPICH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxPrimarySCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxSCCPCH1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxSCCPCH2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxSCCPCH2SF128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxSCCPCH3', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxSecSCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxTargetHSDPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxTargetPSAdjustPeriod', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxTargetPSMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxTargetPSMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxTargetPSStepDown', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxTargetPSStepUp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxTargetTotMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxTargetTotMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('PtxThresholdCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('QHCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Qhyst1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Qhyst1FACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Qhyst1PCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Qhyst2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Qhyst2FACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Qhyst2PCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('QqualMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('QrxlevMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RACHCapacity', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RACHInterFreqMesQuant', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RACHIntraFreqMesQuant', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RACH_Tx_NB01max', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RACH_Tx_NB01min', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RACH_tx_Max', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RACHmeasFilterCoeff', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RNARGroupId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRCconnRepTimer1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RRCconnRepTimer2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTWithHSDPAFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTWithHSDPAFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTWithHSDPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RTWithHSPAFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RachLoadMarginCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RachLoadThresholdCCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RefServForCodePower', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RelocComm_in_InterRNC_HHO', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RsrvdSignaturesOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtFmcgIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtFmciIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RtFmcsIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('RxDivIndicator', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SAC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SHCS_RAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SHCS_RATConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIB11Length', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIB11bisLength', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIB12Length', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIB4Indicator', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIB7factor', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHOffsetEDPCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SRBBitRateRRCSetupEC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SRBDCHFmcsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SRBHSPAFmcsId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SRBMapRRCSetupEC', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SectorID', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ServHONumbUEInterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ServHONumbUEInterRAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ServHOPeriodInterFreq', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ServHOPeriodInterRAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ShutdownStepAmount', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ShutdownWindow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Sintersearch', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SintersearchConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Sintrasearch', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SintrasearchConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Slimit_SearchRAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Slimit_SearchRATConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SmartLTELayeringEnabled', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SmartLTELayeringRSCP', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SmartLTELayeringTSysSel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SmartLTELayeringUA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SmartTrafVolThrDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SmartTrafVolThrUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SpeedScaleTresel', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Sprioritysearch1', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Sprioritysearch2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SsearchHCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SsearchHCSConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Ssearch_RAT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Ssearch_RATConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T300', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T312', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T312Conn', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T313', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('T315', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TBarred', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TCrmax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TCrmaxHyst', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TPCCommandERTarget', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TargetNSEDCHToTotalEDCHPR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Tcell', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Threshservlow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Threshservlow2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWE_CCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ToAWS_CCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TrafVolThresholdDLLow', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('Treselection', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TreselectionFACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('TreselectionPCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UARFCN', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UEtxPowerMaxDPCH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UEtxPowerMaxPRACH', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UEtxPowerMaxPRACHConn', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULLoadStateHSUBRLimit', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('ULLoadStateHSUOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('URAId', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UTRAN_DRX_length', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UseOfHCS', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('UsersPerHSSCCHCode', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCPMaxHSDPAUsers', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VCPPtxOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VoiceCallPriority', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('VoiceOverrideSTHSUPA', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WACSetIdentifier', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WCELChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WCelState', sa.CHAR(length=250), autoincrement=False, nullable=True)],
    schema='nokia_cm_3g'
    )
    op.create_table('wrab',
    sa.Column('FileName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('dateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('version', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('distName', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('id', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('name', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DeltaSIRAfterDownlink', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DeltaSIRAfterUplink', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DeltaSIRDownlink', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DeltaSIRUplink', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('DownlinkOrthog', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHBLERAdjCSVoice10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHBLERAdjCSVoice2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfPSNRTPriQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfPSNRTPrim', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfPSNRTSec', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfPSNRTSecQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfPSNRTSelQuaDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfPSNRTSelQuaUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfPSStrPriQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfPSStrPrim', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfPSStrSec', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfPSStrSecQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfPSStrSelQuaDL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfPSStrSelQuaUL', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfSRB136', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfSRB136Qua', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfSRB34', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfSRB34Qua', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHRateGainCSAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHRateGainCSData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHRateGainPSData', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHRateGainSFDown', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHRateGainSFUp', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHRateGainSRB', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHRxDiv2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHRxDiv4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHTxDiv', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoEDCHCSAMR', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHPSStr128Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHPSStr16Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHPSStr248Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHPSStr32Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHPSStr64Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHPSStr8Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EDCHPSStrOver248Kbps', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfCSDataNT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfCSDataNTQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfCSDataT', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfCSDataTQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfCSNBAMR122', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfCSNBAMR59', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfCSNBAMRQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfCSNBAMRb', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfCSNBAMRc', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfCSWBAMR1265', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfCSWBAMRQua', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('EbNoDCHOfCSWBAMRb', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('L1BLERTEDCHVoice10', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('L1BLERTEDCHVoice2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCH128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCH16', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCH256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCH32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCH4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCH64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCH8', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCHHS128', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCHHS16', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCHHS256', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCHHS32', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCHHS4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCHHS64', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCHHS8', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCHMax', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCHMin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCHOffset', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCHRxDiv2', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('SIRDPCCHInitialDCHRxDiv4', sa.CHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('WRABChangeOrigin', sa.CHAR(length=250), autoincrement=False, nullable=True),
    schema='nokia_cm_3g'
    )


def downgrade():
    op.drop_table('wrab', schema='nokia_cm_3g')
    op.drop_table('wcel', schema='nokia_cm_3g')
    op.drop_table('wbts', schema='nokia_cm_3g')
    op.drop_table('wac', schema='nokia_cm_3g')
    op.drop_table('vptt', schema='nokia_cm_3g')
    op.drop_table('vpct', schema='nokia_cm_3g')
    op.drop_table('vctt', schema='nokia_cm_3g')
    op.drop_table('vcel', schema='nokia_cm_3g')
    op.drop_table('vcct', schema='nokia_cm_3g')
    op.drop_table('vbts', schema='nokia_cm_3g')
    op.drop_table('unit', schema='nokia_cm_3g')
    op.drop_table('uni', schema='nokia_cm_3g')
    op.drop_table('twampr', schema='nokia_cm_3g')
    op.drop_table('twamp', schema='nokia_cm_3g')
    op.drop_table('trde', schema='nokia_cm_3g')
    op.drop_table('topf', schema='nokia_cm_3g')
    op.drop_table('topb', schema='nokia_cm_3g')
    op.drop_table('tmpar', schema='nokia_cm_3g')
    op.drop_table('tctt', schema='nokia_cm_3g')
    op.drop_table('sync', schema='nokia_cm_3g')
    op.drop_table('svtt', schema='nokia_cm_3g')
    op.drop_table('subrack', schema='nokia_cm_3g')
    op.drop_table('submodule', schema='nokia_cm_3g')
    op.drop_table('stport', schema='nokia_cm_3g')
    op.drop_table('stpg', schema='nokia_cm_3g')
    op.drop_table('srtt', schema='nokia_cm_3g')
    op.drop_table('srt4', schema='nokia_cm_3g')
    op.drop_table('sptt', schema='nokia_cm_3g')
    op.drop_table('smod', schema='nokia_cm_3g')
    op.drop_table('sbr4', schema='nokia_cm_3g')
    op.drop_table('rstp', schema='nokia_cm_3g')
    op.drop_table('rntrm', schema='nokia_cm_3g')
    op.drop_table('rnrlc', schema='nokia_cm_3g')
    op.drop_table('rnps', schema='nokia_cm_3g')
    op.drop_table('rnmobi', schema='nokia_cm_3g')
    op.drop_table('rnhspa', schema='nokia_cm_3g')
    op.drop_table('rnfc', schema='nokia_cm_3g')
    op.drop_table('rnc', schema='nokia_cm_3g')
    op.drop_table('rnac', schema='nokia_cm_3g')
    op.drop_table('rmod', schema='nokia_cm_3g')
    op.drop_table('qos', schema='nokia_cm_3g')
    op.drop_table('pwne', schema='nokia_cm_3g')
    op.drop_table('pptt', schema='nokia_cm_3g')
    op.drop_table('pmschdls', schema='nokia_cm_3g')
    op.drop_table('pischdlitem', schema='nokia_cm_3g')
    op.drop_table('ospfv2', schema='nokia_cm_3g')
    op.drop_table('mrbts', schema='nokia_cm_3g')
    op.drop_table('module', schema='nokia_cm_3g')
    op.drop_table('mha', schema='nokia_cm_3g')
    op.drop_table('lcelw', schema='nokia_cm_3g')
    op.drop_table('lcelgw', schema='nokia_cm_3g')
    op.drop_table('l2swi', schema='nokia_cm_3g')
    op.drop_table('ivif', schema='nokia_cm_3g')
    op.drop_table('iur', schema='nokia_cm_3g')
    op.drop_table('iupsip', schema='nokia_cm_3g')
    op.drop_table('iups', schema='nokia_cm_3g')
    op.drop_table('iuo', schema='nokia_cm_3g')
    op.drop_table('iucsip', schema='nokia_cm_3g')
    op.drop_table('iucs', schema='nokia_cm_3g')
    op.drop_table('iubsnt', schema='nokia_cm_3g')
    op.drop_table('itrkobj', schema='nokia_cm_3g')
    op.drop_table('itrkgrp', schema='nokia_cm_3g')
    op.drop_table('isbfp', schema='nokia_cm_3g')
    op.drop_table('iqos', schema='nokia_cm_3g')
    op.drop_table('ipsecc', schema='nokia_cm_3g')
    op.drop_table('iprt', schema='nokia_cm_3g')
    op.drop_table('ipro', schema='nokia_cm_3g')
    op.drop_table('iprm', schema='nokia_cm_3g')
    op.drop_table('ipqm', schema='nokia_cm_3g')
    op.drop_table('ipno', schema='nokia_cm_3g')
    op.drop_table('ipnb', schema='nokia_cm_3g')
    op.drop_table('iphb', schema='nokia_cm_3g')
    op.drop_table('ipbr', schema='nokia_cm_3g')
    op.drop_table('intp', schema='nokia_cm_3g')
    op.drop_table('imag', schema='nokia_cm_3g')
    op.drop_table('iicp', schema='nokia_cm_3g')
    op.drop_table('ihcp', schema='nokia_cm_3g')
    op.drop_table('igif', schema='nokia_cm_3g')
    op.drop_table('ifpg', schema='nokia_cm_3g')
    op.drop_table('ieif', schema='nokia_cm_3g')
    op.drop_table('idsp', schema='nokia_cm_3g')
    op.drop_table('idns', schema='nokia_cm_3g')
    op.drop_table('ibfp', schema='nokia_cm_3g')
    op.drop_table('ibfd', schema='nokia_cm_3g')
    op.drop_table('iaif', schema='nokia_cm_3g')
    op.drop_table('hw', schema='nokia_cm_3g')
    op.drop_table('hops', schema='nokia_cm_3g')
    op.drop_table('hopl', schema='nokia_cm_3g')
    op.drop_table('hopi', schema='nokia_cm_3g')
    op.drop_table('hopg', schema='nokia_cm_3g')
    op.drop_table('fuunit', schema='nokia_cm_3g')
    op.drop_table('ftm', schema='nokia_cm_3g')
    op.drop_table('fmcs', schema='nokia_cm_3g')
    op.drop_table('fmci', schema='nokia_cm_3g')
    op.drop_table('fmcg', schema='nokia_cm_3g')
    op.drop_table('ethlk', schema='nokia_cm_3g')
    op.drop_table('connector', schema='nokia_cm_3g')
    op.drop_table('coco', schema='nokia_cm_3g')
    op.drop_table('cmob', schema='nokia_cm_3g')
    op.drop_table('cesif', schema='nokia_cm_3g')
    op.drop_table('certh', schema='nokia_cm_3g')
    op.drop_table('ccfa', schema='nokia_cm_3g')
    op.drop_table('cabinet', schema='nokia_cm_3g')
    op.drop_table('btsscw', schema='nokia_cm_3g')
    op.drop_table('bfdgrp', schema='nokia_cm_3g')
    op.drop_table('bfd', schema='nokia_cm_3g')
    op.drop_table('antl', schema='nokia_cm_3g')
    op.drop_table('anba', schema='nokia_cm_3g')
    op.drop_table('amgr', schema='nokia_cm_3g')
    op.drop_table('adr4gw', schema='nokia_cm_3g')
    op.drop_table('adjs', schema='nokia_cm_3g')
    op.drop_table('adjl', schema='nokia_cm_3g')
    op.drop_table('adji', schema='nokia_cm_3g')
    op.drop_table('adjg', schema='nokia_cm_3g')
    op.drop_table('accp', schema='nokia_cm_3g')
    op.drop_table('a2ut', schema='nokia_cm_3g')
    op.drop_table('a2st', schema='nokia_cm_3g')
    op.drop_table('a2ne', schema='nokia_cm_3g')
